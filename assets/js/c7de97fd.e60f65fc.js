"use strict";(self.webpackChunkEl_Jardin_Secreto_de_w0x7ce=self.webpackChunkEl_Jardin_Secreto_de_w0x7ce||[]).push([[7886],{6420:(n,e,_)=>{_.r(e),_.d(e,{assets:()=>s,contentTitle:()=>t,default:()=>M,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var i=_(4848),r=_(8453);const c={slug:"esp32-mcpwm-usage-and-examples",title:"ESP32 MCPWM Usage Guide and Examples | ESP32 MCPWM \u4f7f\u7528\u6307\u5357\u8207\u7bc4\u4f8b",authors:[{name:"w0x7ce",title:"Embedded Systems Engineer",url:"https://github.com/tianrking",image_url:"https://github.com/tianrking.png"}],tags:["ESP32","Embedded Systems","MCPWM","Stepper Motor Control","PWM","Motor Control"]},t="ESP32 MCPWM \u4f7f\u7528\u6307\u5357\u8207\u7bc4\u4f8b",o={id:"micro-controladores/ESP32/esp32-mcpwm-usage-and-examples",title:"ESP32 MCPWM Usage Guide and Examples | ESP32 MCPWM \u4f7f\u7528\u6307\u5357\u8207\u7bc4\u4f8b",description:"\u5f15\u8a00",source:"@site/docs/micro-controladores/ESP32/esp32-mcpwm-usage-and-examples.md",sourceDirName:"micro-controladores/ESP32",slug:"/micro-controladores/ESP32/esp32-mcpwm-usage-and-examples",permalink:"/micro-controladores/ESP32/esp32-mcpwm-usage-and-examples",draft:!1,unlisted:!1,editUrl:"https://github.com/tianrking/tianrking.github.io/tree/V3.4/docs/micro-controladores/ESP32/esp32-mcpwm-usage-and-examples.md",tags:[{inline:!0,label:"ESP32",permalink:"/tags/esp-32"},{inline:!0,label:"Embedded Systems",permalink:"/tags/embedded-systems"},{inline:!0,label:"MCPWM",permalink:"/tags/mcpwm"},{inline:!0,label:"Stepper Motor Control",permalink:"/tags/stepper-motor-control"},{inline:!0,label:"PWM",permalink:"/tags/pwm"},{inline:!0,label:"Motor Control",permalink:"/tags/motor-control"}],version:"current",lastUpdatedAt:1721127698e3,frontMatter:{slug:"esp32-mcpwm-usage-and-examples",title:"ESP32 MCPWM Usage Guide and Examples | ESP32 MCPWM \u4f7f\u7528\u6307\u5357\u8207\u7bc4\u4f8b",authors:[{name:"w0x7ce",title:"Embedded Systems Engineer",url:"https://github.com/tianrking",image_url:"https://github.com/tianrking.png"}],tags:["ESP32","Embedded Systems","MCPWM","Stepper Motor Control","PWM","Motor Control"]},sidebar:"tutorialSidebar",previous:{title:"Gu\xeda de Ejemplos de Programaci\xf3n para ESP32 | ESP32 \u7f16\u7a0b\u793a\u4f8b\u6307\u5357",permalink:"/micro-controladores/ESP32/esp32-lista-de-ejemplos-de-programacion"},next:{title:"ESP32 and RP2040 Wireless Communication with NRF24L01 | ESP32 \u8207 RP2040 \u4f7f\u7528 NRF24L01 \u7121\u7dda\u901a\u4fe1\u6a21\u7d44\u6307\u5357",permalink:"/micro-controladores/ESP32/esp32-rp2040-nrf24l01-wireless-communication"}},s={},l=[{value:"\u5f15\u8a00",id:"\u5f15\u8a00",level:2},{value:"ESP32 \u5f15\u8173\u529f\u80fd\u63a8\u85a6",id:"esp32-\u5f15\u8173\u529f\u80fd\u63a8\u85a6",level:2},{value:"\u901a\u7528 GPIO (\u8f38\u5165/\u8f38\u51fa)",id:"\u901a\u7528-gpio-\u8f38\u5165\u8f38\u51fa",level:3},{value:"ADC (\u985e\u6bd4\u6578\u4f4d\u8f49\u63db)",id:"adc-\u985e\u6bd4\u6578\u4f4d\u8f49\u63db",level:3},{value:"DAC (\u6578\u4f4d\u985e\u6bd4\u8f49\u63db)",id:"dac-\u6578\u4f4d\u985e\u6bd4\u8f49\u63db",level:3},{value:"PWM (\u8108\u885d\u5bec\u5ea6\u8abf\u8b8a)",id:"pwm-\u8108\u885d\u5bec\u5ea6\u8abf\u8b8a",level:3},{value:"MCPWM (\u9ad8\u7d1a PWM)",id:"mcpwm-\u9ad8\u7d1a-pwm",level:4},{value:"\u4e92\u88dc\u8f38\u51fa",id:"\u4e92\u88dc\u8f38\u51fa",level:4},{value:"I2C",id:"i2c",level:3},{value:"SPI",id:"spi",level:3},{value:"UART",id:"uart",level:3},{value:"\u96fb\u5bb9\u5f0f\u89f8\u6478\u50b3\u611f\u5668",id:"\u96fb\u5bb9\u5f0f\u89f8\u6478\u50b3\u611f\u5668",level:3},{value:"RTC GPIO (\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u53ef\u7528)",id:"rtc-gpio-\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u53ef\u7528",level:3},{value:"\u6a21\u64ec\u970d\u723e\u50b3\u611f\u5668",id:"\u6a21\u64ec\u970d\u723e\u50b3\u611f\u5668",level:3},{value:"MCPWM \u57fa\u790e\u77e5\u8b58",id:"mcpwm-\u57fa\u790e\u77e5\u8b58",level:2},{value:"\u4e92\u88dc\u8108\u5bec\u8abf\u88fd\u7bc4\u4f8b",id:"\u4e92\u88dc\u8108\u5bec\u8abf\u88fd\u7bc4\u4f8b",level:2},{value:"\u7a0b\u5f0f\u78bc\u89e3\u6790",id:"\u7a0b\u5f0f\u78bc\u89e3\u6790",level:3},{value:"\u6b65\u9032\u96fb\u6a5f\u63a7\u5236\u7bc4\u4f8b",id:"\u6b65\u9032\u96fb\u6a5f\u63a7\u5236\u7bc4\u4f8b",level:2},{value:"\u7a0b\u5f0f\u78bc\u89e3\u6790",id:"\u7a0b\u5f0f\u78bc\u89e3\u6790-1",level:3},{value:"\u6b65\u9032\u96fb\u6a5f\u63a7\u5236\u7684\u512a\u5316\u5efa\u8b70",id:"\u6b65\u9032\u96fb\u6a5f\u63a7\u5236\u7684\u512a\u5316\u5efa\u8b70",level:3},{value:"MCPWM \u9032\u968e\u529f\u80fd",id:"mcpwm-\u9032\u968e\u529f\u80fd",level:2},{value:"1. \u6b7b\u5340\u63a7\u5236",id:"1-\u6b7b\u5340\u63a7\u5236",level:3},{value:"2. \u6545\u969c\u8655\u7406",id:"2-\u6545\u969c\u8655\u7406",level:3},{value:"3. \u540c\u6b65\u64cd\u4f5c",id:"3-\u540c\u6b65\u64cd\u4f5c",level:3},{value:"\u7d50\u8ad6",id:"\u7d50\u8ad6",level:2},{value:"\u5b8c\u6574\u4ee3\u7801",id:"\u5b8c\u6574\u4ee3\u7801",level:2},{value:"\u4e92\u88dc\u8108\u5bec\u8abf\u88fd",id:"\u4e92\u88dc\u8108\u5bec\u8abf\u88fd",level:3},{value:"\u6b65\u9032\u96fb\u6a5f\u63a7\u5236",id:"\u6b65\u9032\u96fb\u6a5f\u63a7\u5236",level:3}];function p(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"esp32-mcpwm-\u4f7f\u7528\u6307\u5357\u8207\u7bc4\u4f8b",children:"ESP32 MCPWM \u4f7f\u7528\u6307\u5357\u8207\u7bc4\u4f8b"}),"\n",(0,i.jsx)(e.h2,{id:"\u5f15\u8a00",children:"\u5f15\u8a00"}),"\n",(0,i.jsx)(e.p,{children:"ESP32 \u662f\u4e00\u6b3e\u529f\u80fd\u5f37\u5927\u7684\u5fae\u63a7\u5236\u5668,\u5176\u4e2d MCPWM (Motor Control Pulse Width Modulation) \u6a21\u7d44\u662f\u4e00\u500b\u975e\u5e38\u5be6\u7528\u7684\u529f\u80fd,\u7279\u5225\u9069\u5408\u7528\u65bc\u96fb\u6a5f\u63a7\u5236\u7b49\u61c9\u7528\u3002\u672c\u6587\u5c07\u8a73\u7d30\u4ecb\u7d39 ESP32 \u7684 MCPWM \u529f\u80fd,\u4e26\u63d0\u4f9b\u5177\u9ad4\u7684\u7a0b\u5f0f\u78bc\u7bc4\u4f8b,\u5305\u62ec\u57fa\u672c\u7684 PWM \u8f38\u51fa\u548c\u6b65\u9032\u96fb\u6a5f\u63a7\u5236\u3002"}),"\n",(0,i.jsx)(e.h2,{id:"esp32-\u5f15\u8173\u529f\u80fd\u63a8\u85a6",children:"ESP32 \u5f15\u8173\u529f\u80fd\u63a8\u85a6"}),"\n",(0,i.jsx)(e.p,{children:"\u5728\u958b\u59cb\u4f7f\u7528 MCPWM \u4e4b\u524d,\u6211\u5011\u5148\u4f86\u4e86\u89e3\u4e00\u4e0b ESP32 \u7684\u5f15\u8173\u529f\u80fd\u3002\u5408\u7406\u9078\u64c7\u5f15\u8173\u53ef\u4ee5\u8b93\u60a8\u7684\u9805\u76ee\u66f4\u52a0\u7a69\u5b9a\u9ad8\u6548\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"\u901a\u7528-gpio-\u8f38\u5165\u8f38\u51fa",children:"\u901a\u7528 GPIO (\u8f38\u5165/\u8f38\u51fa)"}),"\n",(0,i.jsx)(e.p,{children:"\u4ee5\u4e0b\u5f15\u8173\u6c92\u6709\u7279\u6b8a\u529f\u80fd\u9650\u5236,\u53ef\u4ee5\u5b89\u5168\u5730\u7528\u65bc\u5927\u591a\u6578\u9805\u76ee\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"GPIO 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 32, 33"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u9019\u4e9b\u5f15\u8173\u9069\u5408\u7528\u65bc\u4e00\u822c\u7684\u6578\u4f4d\u8f38\u5165/\u8f38\u51fa\u64cd\u4f5c,\u5982\u63a7\u5236 LED\u3001\u8b80\u53d6\u6309\u9215\u72c0\u614b\u7b49\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"adc-\u985e\u6bd4\u6578\u4f4d\u8f49\u63db",children:"ADC (\u985e\u6bd4\u6578\u4f4d\u8f49\u63db)"}),"\n",(0,i.jsx)(e.p,{children:"ESP32 \u63d0\u4f9b\u5169\u7d44 ADC,\u63a8\u85a6\u4f7f\u7528\u4ee5\u4e0b\u5f15\u8173\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"ADC1"}),": GPIO 36, 39, 32, 33, 34, 35"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"ADC2"})," (\u50c5\u5728 Wi-Fi \u672a\u555f\u7528\u6642\u53ef\u7528): GPIO 4, 0, 2, 15, 13, 12, 14, 27, 25, 26"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"ADC \u7528\u65bc\u8b80\u53d6\u985e\u6bd4\u4fe1\u865f,\u5982\u611f\u6e2c\u5668\u8f38\u51fa\u3001\u96fb\u6c60\u96fb\u58d3\u7b49\u3002\u6ce8\u610f ADC2 \u5728\u4f7f\u7528 Wi-Fi \u6642\u53ef\u80fd\u4e0d\u53ef\u7528\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"dac-\u6578\u4f4d\u985e\u6bd4\u8f49\u63db",children:"DAC (\u6578\u4f4d\u985e\u6bd4\u8f49\u63db)"}),"\n",(0,i.jsx)(e.p,{children:"ESP32 \u6709\u5169\u500b DAC \u901a\u9053,\u50c5\u9650\u4ee5\u4e0b\u5f15\u8173\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"GPIO 25, 26"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"DAC \u53ef\u4ee5\u8f38\u51fa\u985e\u6bd4\u96fb\u58d3,\u9069\u7528\u65bc\u97f3\u983b\u8f38\u51fa\u6216\u63a7\u5236\u985e\u6bd4\u8a2d\u5099\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"pwm-\u8108\u885d\u5bec\u5ea6\u8abf\u8b8a",children:"PWM (\u8108\u885d\u5bec\u5ea6\u8abf\u8b8a)"}),"\n",(0,i.jsx)(e.p,{children:"\u9664\u4e86 GPIO 34-39 \u548c SPI flash \u5f15\u8173 (6-11) \u5916,\u6240\u6709\u8f38\u51fa\u5f15\u8173\u90fd\u53ef\u7528\u65bc PWM\u3002\u63a8\u85a6\u4f7f\u7528\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"GPIO 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 32, 33"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"PWM \u53ef\u7528\u65bc LED \u4eae\u5ea6\u63a7\u5236\u3001\u99ac\u9054\u901f\u5ea6\u63a7\u5236\u7b49\u61c9\u7528\u3002"}),"\n",(0,i.jsx)(e.h4,{id:"mcpwm-\u9ad8\u7d1a-pwm",children:"MCPWM (\u9ad8\u7d1a PWM)"}),"\n",(0,i.jsx)(e.p,{children:"ESP32 \u6709\u5169\u500b MCPWM \u55ae\u5143\uff08MCPWM0 \u548c MCPWM1\uff09,\u6bcf\u500b\u55ae\u5143\u6709 3 \u500b\u5b9a\u6642\u5668\u548c 6 \u500b\u8f38\u51fa\u3002"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"MCPWM0"})," \u548c ",(0,i.jsx)(e.strong,{children:"MCPWM1"})," \u53ef\u7528\u5f15\u8173\uff1aGPIO 0, 2, 4, 5, 12, 13, 14, 15, 18, 19, 21, 22, 23, 25, 26, 27, 32, 33"]}),"\n",(0,i.jsx)(e.li,{children:"\u63a8\u85a6\u4f7f\u7528\uff1aGPIO 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 32, 33"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"MCPWM \u7279\u5225\u9069\u5408\u7528\u65bc\u8907\u96dc\u7684\u96fb\u6a5f\u63a7\u5236\u61c9\u7528,\u5982\u7121\u5237\u76f4\u6d41\u96fb\u6a5f\u3001\u6b65\u9032\u96fb\u6a5f\u7b49\u3002"}),"\n",(0,i.jsx)(e.h4,{id:"\u4e92\u88dc\u8f38\u51fa",children:"\u4e92\u88dc\u8f38\u51fa"}),"\n",(0,i.jsx)(e.p,{children:"\u6bcf\u500b MCPWM \u55ae\u5143\u7684 6 \u500b\u8f38\u51fa\u88ab\u5206\u70ba 3 \u5c0d,\u6bcf\u5c0d\u53ef\u4ee5\u8f38\u51fa\u4e92\u88dc\u4fe1\u865f\u3002\u4e92\u88dc\u5c0d\u53ef\u4ee5\u5206\u914d\u5230\u5e7e\u4e4e\u4efb\u610f GPIO \u7d44\u5408\u3002\u5c0d\u65bc\u4e92\u88dc\u8f38\u51fa,\u60a8\u9700\u8981\u9078\u64c7\u540c\u4e00 MCPWM \u55ae\u5143\u4e2d\u7684\u4e00\u5c0d\u8f38\u51fa\u3002\u4f8b\u5982\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"MCPWM0"}),"\uff1a","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"PWM0A - PWM0B"}),"\n",(0,i.jsx)(e.li,{children:"PWM1A - PWM1B"}),"\n",(0,i.jsx)(e.li,{children:"PWM2A - PWM2B"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"MCPWM1"})," \u540c\u7406"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u4e92\u88dc\u8f38\u51fa\u5728\u63a7\u5236 H \u6a4b\u96fb\u8def\u6642\u7279\u5225\u6709\u7528,\u53ef\u4ee5\u78ba\u4fdd\u5169\u500b\u958b\u95dc\u4e0d\u6703\u540c\u6642\u5c0e\u901a\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"i2c",children:"I2C"}),"\n",(0,i.jsx)(e.p,{children:"\u9ed8\u8a8d\u5f15\u8173\u5982\u4e0b\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"SDA\uff1aGPIO 21"}),"\n",(0,i.jsx)(e.li,{children:"SCL\uff1aGPIO 22"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u53ef\u914d\u7f6e\u70ba\u5176\u4ed6\u5f15\u8173,\u4f46\u63a8\u85a6\u4f7f\u7528\u9ed8\u8a8d\u503c\u4ee5\u4fdd\u6301\u4e00\u81f4\u6027\u3002I2C \u7528\u65bc\u8207\u5404\u7a2e\u611f\u6e2c\u5668\u548c\u986f\u793a\u5668\u901a\u4fe1\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"spi",children:"SPI"}),"\n",(0,i.jsx)(e.p,{children:"ESP32 \u652f\u6301\u5169\u7d44 SPI \u5f15\u8173\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"VSPI (\u9ed8\u8a8d)"}),"\uff1a","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"MOSI\uff1aGPIO 23"}),"\n",(0,i.jsx)(e.li,{children:"MISO\uff1aGPIO 19"}),"\n",(0,i.jsx)(e.li,{children:"CLK\uff1aGPIO 18"}),"\n",(0,i.jsx)(e.li,{children:"CS\uff1aGPIO 5"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"HSPI"}),"\uff1a","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"MOSI\uff1aGPIO 13"}),"\n",(0,i.jsx)(e.li,{children:"MISO\uff1aGPIO 12"}),"\n",(0,i.jsx)(e.li,{children:"CLK\uff1aGPIO 14"}),"\n",(0,i.jsx)(e.li,{children:"CS\uff1aGPIO 15"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"SPI \u7528\u65bc\u9ad8\u901f\u6578\u64da\u50b3\u8f38,\u5982\u8b80\u5beb SD \u5361\u3001\u63a7\u5236\u986f\u793a\u5c4f\u7b49\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"uart",children:"UART"}),"\n",(0,i.jsx)(e.p,{children:"ESP32 \u6709\u4e09\u500b UART \u6a21\u7d44,\u5f15\u8173\u914d\u7f6e\u5982\u4e0b\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"UART0 (\u9ed8\u8a8d)"}),"\uff1a","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"TX\uff1aGPIO 1"}),"\n",(0,i.jsx)(e.li,{children:"RX\uff1aGPIO 3"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"UART1"}),"\uff1a","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"TX\uff1aGPIO 10"}),"\n",(0,i.jsx)(e.li,{children:"RX\uff1aGPIO 9"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"UART2"}),"\uff1a","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"TX\uff1aGPIO 17"}),"\n",(0,i.jsx)(e.li,{children:"RX\uff1aGPIO 16"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"UART \u7528\u65bc\u4e32\u5217\u901a\u4fe1,\u5982\u8207\u96fb\u8166\u901a\u4fe1\u6216\u9023\u63a5 GPS \u6a21\u7d44\u7b49\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"\u96fb\u5bb9\u5f0f\u89f8\u6478\u50b3\u611f\u5668",children:"\u96fb\u5bb9\u5f0f\u89f8\u6478\u50b3\u611f\u5668"}),"\n",(0,i.jsx)(e.p,{children:"\u63a8\u85a6\u4f7f\u7528\u4ee5\u4e0b\u5f15\u8173,\u907f\u514d\u4f7f\u7528 Strapping \u5f15\u8173\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"GPIO 13, 14, 27, 32, 33"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u9019\u4e9b\u5f15\u8173\u53ef\u7528\u65bc\u5275\u5efa\u89f8\u6478\u611f\u61c9\u754c\u9762\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"rtc-gpio-\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u53ef\u7528",children:"RTC GPIO (\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u53ef\u7528)"}),"\n",(0,i.jsx)(e.p,{children:"\u4ee5\u4e0b\u5f15\u8173\u5728\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u4e0b\u4ecd\u7136\u53ef\u7528\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"GPIO 0, 2, 4, 12-15, 25-27, 32-39"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u9019\u4e9b\u5f15\u8173\u53ef\u7528\u65bc\u5728\u4f4e\u529f\u8017\u6a21\u5f0f\u4e0b\u559a\u9192\u8a2d\u5099\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"\u6a21\u64ec\u970d\u723e\u50b3\u611f\u5668",children:"\u6a21\u64ec\u970d\u723e\u50b3\u611f\u5668"}),"\n",(0,i.jsx)(e.p,{children:"\u50c5\u9650\u4ee5\u4e0b\u5f15\u8173\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"GPIO 36, 39"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u9019\u4e9b\u5f15\u8173\u5c08\u9580\u7528\u65bc\u9023\u63a5\u970d\u723e\u6548\u61c9\u611f\u6e2c\u5668,\u7528\u65bc\u6aa2\u6e2c\u78c1\u5834\u3002"}),"\n",(0,i.jsx)(e.h2,{id:"mcpwm-\u57fa\u790e\u77e5\u8b58",children:"MCPWM \u57fa\u790e\u77e5\u8b58"}),"\n",(0,i.jsx)(e.p,{children:"MCPWM (Motor Control Pulse Width Modulation) \u662f ESP32 \u4e2d\u4e00\u500b\u5f37\u5927\u7684\u529f\u80fd\u6a21\u7d44,\u5c08\u70ba\u96fb\u6a5f\u63a7\u5236\u8a2d\u8a08\u3002\u8207\u666e\u901a\u7684 PWM \u76f8\u6bd4,MCPWM \u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u529f\u80fd\u548c\u9748\u6d3b\u6027\uff1a"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"\u591a\u901a\u9053\u8f38\u51fa\uff1a\u6bcf\u500b MCPWM \u55ae\u5143\u6709 6 \u500b\u7368\u7acb\u7684\u8f38\u51fa\u901a\u9053\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u9ad8\u7cbe\u5ea6\uff1a\u53ef\u4ee5\u7522\u751f\u9ad8\u983b\u7387\u3001\u9ad8\u5206\u8fa8\u7387\u7684 PWM \u4fe1\u865f\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u4e92\u88dc\u8f38\u51fa\uff1a\u53ef\u4ee5\u751f\u6210\u4e92\u88dc\u7684 PWM \u4fe1\u865f\u5c0d,\u9069\u7528\u65bc H \u6a4b\u9a45\u52d5\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u6b7b\u5340\u63a7\u5236\uff1a\u53ef\u4ee5\u5728\u4e92\u88dc\u4fe1\u865f\u4e4b\u9593\u63d2\u5165\u6b7b\u5340\u6642\u9593,\u9632\u6b62\u77ed\u8def\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u6545\u969c\u6aa2\u6e2c\uff1a\u5177\u6709\u6545\u969c\u8f38\u5165\u529f\u80fd,\u53ef\u4ee5\u5728\u6aa2\u6e2c\u5230\u6545\u969c\u6642\u81ea\u52d5\u95dc\u9589\u8f38\u51fa\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u540c\u6b65\u64cd\u4f5c\uff1a\u591a\u500b MCPWM \u55ae\u5143\u53ef\u4ee5\u540c\u6b65\u5de5\u4f5c,\u9069\u5408\u591a\u76f8\u96fb\u6a5f\u63a7\u5236\u3002"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u4e92\u88dc\u8108\u5bec\u8abf\u88fd\u7bc4\u4f8b",children:"\u4e92\u88dc\u8108\u5bec\u8abf\u88fd\u7bc4\u4f8b"}),"\n",(0,i.jsx)(e.p,{children:"\u4ee5\u4e0b\u662f\u4e00\u500b\u4f7f\u7528 MCPWM \u7522\u751f\u4e92\u88dc PWM \u8f38\u51fa\u7684\u7bc4\u4f8b\u7a0b\u5f0f\u3002\u9019\u500b\u7bc4\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u8a2d\u7f6e MCPWM,\u4e26\u52d5\u614b\u8abf\u6574\u983b\u7387\u548c\u5360\u7a7a\u6bd4\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",metastring:'title="mcpwm_normal_pwm_demo.c"',children:'#include "freertos/FreeRTOS.h"\n#include "freertos/task.h"\n#include "esp_log.h"\n#include "driver/mcpwm_prelude.h"\n#include <inttypes.h>\n\nstatic const char *TAG = "example";\n\n// \u5b9a\u7fa9 MCPWM \u53c3\u6578\n#define MCPWM_TIMER_RESOLUTION_HZ 10000000 // 10MHz, 1 tick = 0.1us\n#define MCPWM_FREQ_HZ_INITIAL     10000    // \u521d\u59cb\u983b\u7387\u70ba 10KHz\n#define MCPWM_GPIO_A              18       // PWM \u8f38\u51fa A \u7684 GPIO\n#define MCPWM_GPIO_B              21       // PWM \u8f38\u51fa B \u7684 GPIO\n#define MCPWM_DUTY_CYCLE_INITIAL  30       // \u521d\u59cb\u5360\u7a7a\u6bd4\u70ba 30%\n\n// PWM \u914d\u7f6e\u7d50\u69cb\u9ad4\ntypedef struct {\n    mcpwm_timer_handle_t timer;\n    mcpwm_oper_handle_t oper;\n    mcpwm_cmpr_handle_t cmpa;\n    mcpwm_cmpr_handle_t cmpb;\n    mcpwm_gen_handle_t gena;\n    mcpwm_gen_handle_t genb;\n} pwm_config_t;\n\n// \u521d\u59cb\u5316 PWM\nstatic pwm_config_t init_pwm(void) {\n    pwm_config_t config;\n\n    ESP_LOGI(TAG, "\u521d\u59cb\u5316 MCPWM \u6a21\u7d44");\n\n    // \u6b65\u9a5f 1: \u5275\u5efa MCPWM \u5b9a\u6642\u5668\n    mcpwm_timer_config_t timer_config = {\n        .group_id = 0,\n        .clk_src = MCPWM_TIMER_CLK_SRC_DEFAULT,\n        .resolution_hz = MCPWM_TIMER_RESOLUTION_HZ,\n        .period_ticks = MCPWM_TIMER_RESOLUTION_HZ / MCPWM_FREQ_HZ_INITIAL,\n        .count_mode = MCPWM_TIMER_COUNT_MODE_UP,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_timer(&timer_config, &config.timer));\n\n    // \u6b65\u9a5f 2: \u5275\u5efa MCPWM \u904b\u7b97\u5668\n    mcpwm_operator_config_t operator_config = {\n        .group_id = 0,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_operator(&operator_config, &config.oper));\n\n    // \u6b65\u9a5f 3: \u5c07\u5b9a\u6642\u5668\u9023\u63a5\u5230\u904b\u7b97\u5668\n    ESP_ERROR_CHECK(mcpwm_operator_connect_timer(config.oper, config.timer));\n\n    // \u6b65\u9a5f 4: \u5275\u5efa\u6bd4\u8f03\u5668\n    mcpwm_comparator_config_t comparator_config = {\n        .flags.update_cmp_on_tez = true,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_comparator(config.oper, &comparator_config, &config.cmpa));\n    ESP_ERROR_CHECK(mcpwm_new_comparator(config.oper, &comparator_config, &config.cmpb));\n\n    // \u6b65\u9a5f 5: \u5275\u5efa PWM \u751f\u6210\u5668\n    mcpwm_generator_config_t generator_config = {\n        .gen_gpio_num = MCPWM_GPIO_A,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_generator(config.oper, &generator_config, &config.gena));\n    generator_config.gen_gpio_num = MCPWM_GPIO_B;\n    ESP_ERROR_CHECK(mcpwm_new_generator(config.oper, &generator_config, &config.genb));\n\n    // \u6b65\u9a5f 6: \u8a2d\u7f6e\u751f\u6210\u5668 A \u7684\u52d5\u4f5c (\u5360\u7a7a\u6bd4)\n    ESP_ERROR_CHECK(mcpwm_generator_set_actions_on_timer_event(config.gena,\n        MCPWM_GEN_TIMER_EVENT_ACTION(MCPWM_TIMER_DIRECTION_UP, MCPWM_TIMER_EVENT_EMPTY, MCPWM_GEN_ACTION_HIGH),\n        MCPWM_GEN_TIMER_EVENT_ACTION_END()));\n    ESP_ERROR_CHECK(mcpwm_generator_set_actions_on_compare_event(config.gena,\n        MCPWM_GEN_COMPARE_EVENT_ACTION(MCPWM_TIMER_DIRECTION_UP, config.cmpa, MCPWM_GEN_ACTION_LOW),\n        MCPWM_GEN_COMPARE_EVENT_ACTION_END()));\n\n    // \u6b65\u9a5f 7: \u8a2d\u7f6e\u751f\u6210\u5668 B \u7684\u52d5\u4f5c (\u4e92\u88dc\u8f38\u51fa)\n    ESP_ERROR_CHECK(mcpwm_generator_set_actions_on_timer_event(config.genb,\n        MCPWM_GEN_TIMER_EVENT_ACTION(MCPWM_TIMER_DIRECTION_UP, MCPWM_TIMER_EVENT_EMPTY, MCPWM_GEN_ACTION_LOW),\n        MCPWM_GEN_TIMER_EVENT_ACTION_END()));\n    ESP_ERROR_CHECK(mcpwm_generator_set_actions_on_compare_event(config.genb,\n        MCPWM_GEN_COMPARE_EVENT_ACTION(MCPWM_TIMER_DIRECTION_UP, config.cmpa, MCPWM_GEN_ACTION_HIGH),\n        MCPWM_GEN_COMPARE_EVENT_ACTION_END()));\n\n    // \u6b65\u9a5f 8: \u8a2d\u7f6e\u521d\u59cb\u6bd4\u8f03\u503c (\u6c7a\u5b9a\u521d\u59cb\u5360\u7a7a\u6bd4)\n    uint32_t compare_val = (MCPWM_TIMER_RESOLUTION_HZ / MCPWM_FREQ_HZ_INITIAL) * MCPWM_DUTY_CYCLE_INITIAL / 100;\n    ESP_ERROR_CHECK(mcpwm_comparator_set_compare_value(config.cmpa, compare_val));\n    ESP_ERROR_CHECK(mcpwm_comparator_set_compare_value(config.cmpb, compare_val));\n\n    // \u6b65\u9a5f 9: \u555f\u7528 MCPWM \u5b9a\u6642\u5668\n    ESP_ERROR_CHECK(mcpwm_timer_enable(config.timer));\n\n    // \u6b65\u9a5f 10: \u555f\u52d5 MCPWM \u5b9a\u6642\u5668\n    ESP_ERROR_CHECK(mcpwm_timer_start_stop(config.timer, MCPWM_TIMER_START_NO_STOP));\n\n    ESP_LOGI(TAG, "MCPWM \u4e92\u88dc\u8f38\u51fa\u5df2\u555f\u52d5");\n    ESP_LOGI(TAG, "GPIO%d: %d%% \u5360\u7a7a\u6bd4, GPIO%d: %d%% \u5360\u7a7a\u6bd4", \n             MCPWM_GPIO_A, MCPWM_DUTY_CYCLE_INITIAL, MCPWM_GPIO_B, 100 - MCPWM_DUTY_CYCLE_INITIAL);\n    ESP_LOGI(TAG, "\u983b\u7387: %dHz", MCPWM_FREQ_HZ_INITIAL);\n\n    return config;\n}\n\n// \u8a2d\u7f6e\u5360\u7a7a\u6bd4\nstatic void set_duty_cycle(pwm_config_t* config, float duty_cycle) {\n    uint32_t compare_val = (MCPWM_TIMER_RESOLUTION_HZ / MCPWM_FREQ_HZ_INITIAL) * duty_cycle / 100;\n    ESP_ERROR_CHECK(mcpwm_comparator_set_compare_value(config->cmpa, compare_val));\n    ESP_ERROR_CHECK(mcpwm_comparator_set_compare_value(config->cmpb, compare_val));\n}\n\n// \u8a2d\u7f6e\u983b\u7387\nstatic void set_frequency(pwm_config_t* config, uint32_t freq_hz) {\n    ESP_ERROR_CHECK(mcpwm_timer_set_period(config->timer, MCPWM_TIMER_RESOLUTION_HZ / freq_hz));\n}\n\nvoid app_main(void)\n{\n    // \u521d\u59cb\u5316 PWM \u914d\u7f6e\n    pwm_config_t pwm_config = init_pwm();\n\n    // \u521d\u59cb\u5360\u7a7a\u6bd4\u548c\u983b\u7387\n    float duty_cycle = MCPWM_DUTY_CYCLE_INITIAL;\n    uint32_t freq_hz = MCPWM_FREQ_HZ_INITIAL;\n\n    while (1) {\n        // \u6bcf 5 \u79d2\u9418\u6539\u8b8a\u4e00\u6b21\u5360\u7a7a\u6bd4 (30% -> 70% -> 30% ...)\n        duty_cycle = (duty_cycle == 30) ? 70 : 30;\n        set_duty_cycle(&pwm_config, duty_cycle);\n        ESP_LOGI(TAG, "\u5360\u7a7a\u6bd4\u5df2\u8a2d\u7f6e\u70ba %.0f%%", duty_cycle);\n\n        vTaskDelay(pdMS_TO_TICKS(5000));\n\n        // \u6bcf 10 \u79d2\u9418\u6539\u8b8a\u4e00\u6b21\u983b\u7387 (10kHz -> 5kHz -> 10kHz ...)\n        freq_hz = (freq_hz == 10000) ? 5000 : 10000;\n        set_frequency(&pwm_config, freq_hz);\n        ESP_LOGI(TAG, "\u983b\u7387\u5df2\u8a2d\u7f6e\u70ba %"PRIu32" Hz", freq_hz);\n\n        vTaskDelay(pdMS_TO_TICKS(5000));\n    }\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\u7a0b\u5f0f\u78bc\u89e3\u6790",children:"\u7a0b\u5f0f\u78bc\u89e3\u6790"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u521d\u59cb\u5316 MCPWM"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u5275\u5efa MCPWM \u5b9a\u6642\u5668\u3001\u904b\u7b97\u5668\u3001\u6bd4\u8f03\u5668\u548c\u751f\u6210\u5668\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u8a2d\u7f6e PWM \u983b\u7387\u548c\u5206\u8fa8\u7387\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u914d\u7f6e GPIO \u8f38\u51fa\u3002"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u8a2d\u7f6e\u4e92\u88dc\u8f38\u51fa"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u901a\u904e\u8a2d\u7f6e\u4e0d\u540c\u7684\u52d5\u4f5c\u4f7f\u5169\u500b\u8f38\u51fa\u4e92\u88dc\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u7576\u4e00\u500b\u8f38\u51fa\u70ba\u9ad8\u6642\uff0c\u53e6\u4e00\u500b\u70ba\u4f4e\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u52d5\u614b\u8abf\u6574"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"set_duty_cycle"})," \u51fd\u6578\u7528\u65bc\u8abf\u6574\u5360\u7a7a\u6bd4\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"set_frequency"})," \u51fd\u6578\u7528\u65bc\u8abf\u6574\u983b\u7387\u3002"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u4e3b\u5faa\u74b0"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u6bcf 5 \u79d2\u6539\u8b8a\u4e00\u6b21\u5360\u7a7a\u6bd4\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u6bcf 10 \u79d2\u6539\u8b8a\u4e00\u6b21\u983b\u7387\u3002"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u9019\u500b\u7bc4\u4f8b\u5c55\u793a\u4e86 MCPWM \u7684\u57fa\u672c\u7528\u6cd5\uff0c\u5305\u62ec\u521d\u59cb\u5316\u3001\u914d\u7f6e\u548c\u52d5\u614b\u8abf\u6574\u3002\u5b83\u7279\u5225\u9069\u7528\u65bc\u9700\u8981\u7cbe\u78ba\u63a7\u5236\u7684\u61c9\u7528\uff0c\u5982\u96fb\u6a5f\u9a45\u52d5\u3001LED \u8abf\u5149\u7b49\u3002"}),"\n",(0,i.jsx)(e.h2,{id:"\u6b65\u9032\u96fb\u6a5f\u63a7\u5236\u7bc4\u4f8b",children:"\u6b65\u9032\u96fb\u6a5f\u63a7\u5236\u7bc4\u4f8b"}),"\n",(0,i.jsx)(e.p,{children:"\u63a5\u4e0b\u4f86\uff0c\u6211\u5011\u5c07\u5c55\u793a\u5982\u4f55\u4f7f\u7528 MCPWM \u63a7\u5236\u6b65\u9032\u96fb\u6a5f\u3002\u6b65\u9032\u96fb\u6a5f\u63a7\u5236\u9700\u8981\u7cbe\u78ba\u7684\u8108\u885d\u5e8f\u5217\uff0cMCPWM \u6a21\u7d44\u975e\u5e38\u9069\u5408\u9019\u7a2e\u61c9\u7528\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",metastring:'title="mcpwm_step_motor_demo.c"',children:'#include "freertos/FreeRTOS.h"          // FreeRTOS \u6a19\u982d\u6a94\u6848\n#include "freertos/task.h"              // FreeRTOS \u4efb\u52d9\u7ba1\u7406\n#include "esp_log.h"                    // ESP32 \u65e5\u8a8c\u8a18\u9304\n#include "driver/mcpwm_prelude.h"       // MCPWM \u9a45\u52d5\n#include "driver/gpio.h"                // GPIO \u9a45\u52d5\n#include <inttypes.h>                   // \u6a19\u6e96\u6574\u6578\u985e\u578b\u5b9a\u7fa9\n\nstatic const char *TAG = "stepper_example"; // \u65e5\u8a8c\u6a19\u7c64\n\n#define MCPWM_TIMER_RESOLUTION_HZ 1000000  // MCPWM \u8a08\u6642\u5668\u5206\u8fa8\u7387\uff0c1MHz\uff0c\u5373 1 \u500b tick \u70ba 1 \u5fae\u79d2\n#define MCPWM_FREQ_HZ             10000    // MCPWM \u983b\u7387\uff0c10kHz\uff0c\u53ef\u4ee5\u6839\u64da\u9700\u8981\u8abf\u6574\n#define MCPWM_GPIO_STEP           18       // \u6b65\u9032\u8108\u885d\u8f38\u51fa\u7684 GPIO\n#define MCPWM_GPIO_DIR            22       // \u65b9\u5411\u63a7\u5236\u7684 GPIO\n\n// \u5b9a\u7fa9\u6b65\u9032\u96fb\u6a5f\u914d\u7f6e\u7d50\u69cb\u9ad4\ntypedef struct {\n    mcpwm_timer_handle_t timer;\n    mcpwm_oper_handle_t oper;\n    mcpwm_cmpr_handle_t cmpr;\n    mcpwm_gen_handle_t gen;\n    int target_steps;                // \u76ee\u6a19\u6b65\u6578\n    volatile int current_steps;      // \u7576\u524d\u6b65\u6578\n    bool direction;                  // \u65b9\u5411\n} stepper_config_t;\n\nstatic stepper_config_t stepper_config; // \u5168\u5c40\u6b65\u9032\u96fb\u6a5f\u914d\u7f6e\n\n// MCPWM \u4e2d\u65b7\u8655\u7406\u51fd\u6578\nstatic bool IRAM_ATTR mcpwm_isr_handler(mcpwm_timer_handle_t timer, const mcpwm_timer_event_data_t *edata, void *user_data)\n{\n    stepper_config_t *config = (stepper_config_t *)user_data; // \u53d6\u5f97\u6b65\u9032\u96fb\u6a5f\u914d\u7f6e\n    \n    if (config->current_steps < config->target_steps) {\n        config->current_steps++; // \u589e\u52a0\u7576\u524d\u6b65\u6578\n        return true;  // \u7e7c\u7e8c\u7522\u751f\u8108\u885d\n    } else {\n        ESP_ERROR_CHECK(mcpwm_timer_start_stop(config->timer, MCPWM_TIMER_STOP_FULL)); // \u505c\u6b62\u8a08\u6642\u5668\n        return false;  // \u505c\u6b62\u8a08\u6642\u5668\n    }\n}\n\n// \u521d\u59cb\u5316\u6b65\u9032\u96fb\u6a5f\u7684 MCPWM \u63a7\u5236\nstatic void init_stepper_mcpwm(void) {\n    ESP_LOGI(TAG, "\u521d\u59cb\u5316\u6b65\u9032\u96fb\u6a5f MCPWM \u63a7\u5236");\n\n    // \u914d\u7f6e MCPWM \u8a08\u6642\u5668\n    mcpwm_timer_config_t timer_config = {\n        .group_id = 0,\n        .clk_src = MCPWM_TIMER_CLK_SRC_DEFAULT,\n        .resolution_hz = MCPWM_TIMER_RESOLUTION_HZ,\n        .period_ticks = MCPWM_TIMER_RESOLUTION_HZ / MCPWM_FREQ_HZ,\n        .count_mode = MCPWM_TIMER_COUNT_MODE_UP,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_timer(&timer_config, &stepper_config.timer));\n\n    // \u914d\u7f6e MCPWM \u64cd\u4f5c\u5668\n    mcpwm_operator_config_t operator_config = {\n        .group_id = 0,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_operator(&operator_config, &stepper_config.oper));\n\n    ESP_ERROR_CHECK(mcpwm_operator_connect_timer(stepper_config.oper, stepper_config.timer));\n\n    // \u914d\u7f6e MCPWM \u6bd4\u8f03\u5668\n    mcpwm_comparator_config_t comparator_config = {\n        .flags.update_cmp_on_tez = true,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_comparator(stepper_config.oper, &comparator_config, &stepper_config.cmpr));\n\n    // \u914d\u7f6e MCPWM \u7522\u751f\u5668\n    mcpwm_generator_config_t generator_config = {\n        .gen_gpio_num = MCPWM_GPIO_STEP,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_generator(stepper_config.oper, &generator_config, &stepper_config.gen));\n\n    // \u8a2d\u7f6e MCPWM \u7522\u751f\u5668\u5728\u8a08\u6642\u5668\u4e8b\u4ef6\u4e0a\u7684\u52d5\u4f5c\n    ESP_ERROR_CHECK(mcpwm_generator_set_actions_on_timer_event(stepper_config.gen,\n        MCPWM_GEN_TIMER_EVENT_ACTION(MCPWM_TIMER_DIRECTION_UP, MCPWM_TIMER_EVENT_EMPTY, MCPWM_GEN_ACTION_HIGH),\n        MCPWM_GEN_TIMER_EVENT_ACTION_END()));\n    ESP_ERROR_CHECK(mcpwm_generator_set_actions_on_compare_event(stepper_config.gen,\n        MCPWM_GEN_COMPARE_EVENT_ACTION(MCPWM_TIMER_DIRECTION_UP, stepper_config.cmpr, MCPWM_GEN_ACTION_LOW),\n        MCPWM_GEN_COMPARE_EVENT_ACTION_END()));\n\n    // \u8a2d\u7f6e MCPWM \u6bd4\u8f03\u5668\u7684\u6bd4\u8f03\u503c\n    ESP_ERROR_CHECK(mcpwm_comparator_set_compare_value(stepper_config.cmpr, MCPWM_TIMER_RESOLUTION_HZ / MCPWM_FREQ_HZ / 2));\n\n    // \u8a3b\u518a MCPWM \u8a08\u6642\u5668\u4e8b\u4ef6\u56de\u8abf\n    ESP_ERROR_CHECK(mcpwm_timer_register_event_callbacks(stepper_config.timer, \n        &(mcpwm_timer_event_callbacks_t){\n            .on_full = mcpwm_isr_handler,\n        }, &stepper_config));\n\n    // \u555f\u7528 MCPWM \u8a08\u6642\u5668\n    ESP_ERROR_CHECK(mcpwm_timer_enable(stepper_config.timer));\n\n    // \u521d\u59cb\u5316\u65b9\u5411\u63a7\u5236 GPIO\n    gpio_config_t io_conf = {\n        .intr_type = GPIO_INTR_DISABLE,\n        .mode = GPIO_MODE_OUTPUT,\n        .pin_bit_mask = (1ULL << MCPWM_GPIO_DIR),\n        .pull_down_en = 0,\n        .pull_up_en = 1  // \u555f\u7528\u5167\u90e8\u4e0a\u62c9\n    };\n    gpio_config(&io_conf);\n\n    // \u78ba\u4fdd\u65b9\u5411\u5f15\u8173\u521d\u59cb\u72c0\u614b\n    gpio_set_level(MCPWM_GPIO_DIR, 0);\n\n    ESP_LOGI(TAG, "\u6b65\u9032\u96fb\u6a5f MCPWM \u63a7\u5236\u521d\u59cb\u5316\u5b8c\u6210");\n    ESP_LOGI(TAG, "MCPWM \u6b65\u9032\u5f15\u8173: %d, \u65b9\u5411\u5f15\u8173: %d", MCPWM_GPIO_STEP, MCPWM_GPIO_DIR);\n}\n\n// \u63a7\u5236\u6b65\u9032\u96fb\u6a5f\u79fb\u52d5\nstatic void move_stepper(int steps, bool direction) {\n    ESP_LOGI(TAG, "\u6e96\u5099\u79fb\u52d5\u6b65\u9032\u96fb\u6a5f\uff1a%d \u6b65, \u65b9\u5411\uff1a%s", steps, direction ? "\u6b63\u5411" : "\u53cd\u5411");\n\n    // \u6aa2\u67e5\u7576\u524d GPIO \u72c0\u614b\n    int current_dir = gpio_get_level(MCPWM_GPIO_DIR);\n    ESP_LOGI(TAG, "\u7576\u524d\u65b9\u5411\u5f15\u8173\u72c0\u614b: %d", current_dir);\n\n    // \u78ba\u4fdd\u4e0a\u4e00\u6b21\u79fb\u52d5\u5df2\u7d93\u5b8c\u5168\u505c\u6b62\n    while (stepper_config.current_steps < stepper_config.target_steps) {\n        vTaskDelay(1);\n    }\n\n    // \u505c\u6b62\u8a08\u6642\u5668\n    ESP_ERROR_CHECK(mcpwm_timer_start_stop(stepper_config.timer, MCPWM_TIMER_STOP_FULL));\n    ESP_LOGI(TAG, "MCPWM \u8a08\u6642\u5668\u5df2\u505c\u6b62");\n\n    // \u8a2d\u7f6e\u65b0\u7684\u65b9\u5411\n    gpio_set_level(MCPWM_GPIO_DIR, direction);\n    ESP_LOGI(TAG, "\u65b9\u5411\u5df2\u8a2d\u7f6e\u70ba: %d", direction);\n\n    // \u6dfb\u52a0\u77ed\u66ab\u5ef6\u9072\uff0c\u78ba\u4fdd\u65b9\u5411\u4fe1\u865f\u7a69\u5b9a\n    vTaskDelay(pdMS_TO_TICKS(5));\n\n    // \u518d\u6b21\u6aa2\u67e5 GPIO \u72c0\u614b\n    current_dir = gpio_get_level(MCPWM_GPIO_DIR);\n    ESP_LOGI(TAG, "\u8a2d\u7f6e\u5f8c\u65b9\u5411\u5f15\u8173\u72c0\u614b: %d", current_dir);\n\n    // \u66f4\u65b0\u6b65\u9032\u914d\u7f6e\n    stepper_config.target_steps = steps;\n    stepper_config.current_steps = 0;\n    stepper_config.direction = direction;\n\n    // \u555f\u52d5\u8a08\u6642\u5668\uff0c\u958b\u59cb\u6b65\u9032\n    ESP_ERROR_CHECK(mcpwm_timer_start_stop(stepper_config.timer, MCPWM_TIMER_START_NO_STOP));\n    ESP_LOGI(TAG, "MCPWM \u8a08\u6642\u5668\u5df2\u555f\u52d5\uff0c\u958b\u59cb\u79fb\u52d5");\n}\n\n// \u4e3b\u61c9\u7528\u7a0b\u5e8f\u5165\u53e3\nvoid app_main(void)\n{\n    init_stepper_mcpwm(); // \u521d\u59cb\u5316\u6b65\u9032\u96fb\u6a5f MCPWM \u63a7\u5236\n\n    while (1) {\n        // \u6b63\u5411\u65cb\u8f49 20000 \u6b65\n        move_stepper(20000, true);\n        while (stepper_config.current_steps < stepper_config.target_steps) {\n            vTaskDelay(1);\n        }\n        ESP_LOGI(TAG, "\u5b8c\u6210\u6b63\u5411\u65cb\u8f49 20000 \u6b65");\n        vTaskDelay(pdMS_TO_TICKS(2000)); // \u5ef6\u9072 2 \u79d2\n\n        // \u53cd\u5411\u65cb\u8f49 20000 \u6b65\n        move_stepper(20000, false);\n        while (stepper_config.current_steps < stepper_config.target_steps) {\n            vTaskDelay(1);\n        }\n        ESP_LOGI(TAG, "\u5b8c\u6210\u53cd\u5411\u65cb\u8f49 20000 \u6b65");\n        vTaskDelay(pdMS_TO_TICKS(2000)); // \u5ef6\u9072 2 \u79d2\n    }\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\u7a0b\u5f0f\u78bc\u89e3\u6790-1",children:"\u7a0b\u5f0f\u78bc\u89e3\u6790"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u521d\u59cb\u5316 MCPWM"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u8a2d\u7f6e MCPWM \u8a08\u6642\u5668\u3001\u904b\u7b97\u5668\u3001\u6bd4\u8f03\u5668\u548c\u751f\u6210\u5668\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u914d\u7f6e\u6b65\u9032\u8108\u885d\u8f38\u51fa\u548c\u65b9\u5411\u63a7\u5236 GPIO\u3002"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u4e2d\u65b7\u8655\u7406"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u4f7f\u7528 MCPWM \u7684\u4e2d\u65b7\u529f\u80fd\u4f86\u8a08\u6578\u6b65\u6578\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u7576\u9054\u5230\u76ee\u6a19\u6b65\u6578\u6642\u505c\u6b62\u8a08\u6642\u5668\u3002"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u6b65\u9032\u96fb\u6a5f\u79fb\u52d5\u63a7\u5236"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"move_stepper"})," \u51fd\u6578\u63a7\u5236\u96fb\u6a5f\u7684\u79fb\u52d5\u65b9\u5411\u548c\u6b65\u6578\u3002"]}),"\n",(0,i.jsx)(e.li,{children:"\u5728\u6539\u8b8a\u65b9\u5411\u6642\u6dfb\u52a0\u77ed\u66ab\u5ef6\u9072\uff0c\u78ba\u4fdd\u4fe1\u865f\u7a69\u5b9a\u3002"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u4e3b\u5faa\u74b0"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u4ea4\u66ff\u9032\u884c\u6b63\u5411\u548c\u53cd\u5411\u65cb\u8f49\uff0c\u6bcf\u6b21 20000 \u6b65\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u6bcf\u6b21\u79fb\u52d5\u5f8c\u7b49\u5f85 2 \u79d2\u3002"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u9019\u500b\u7bc4\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 MCPWM \u7cbe\u78ba\u63a7\u5236\u6b65\u9032\u96fb\u6a5f\u3002\u5b83\u7279\u5225\u9069\u7528\u65bc\u9700\u8981\u7cbe\u78ba\u5b9a\u4f4d\u7684\u61c9\u7528\uff0c\u5982 3D \u6253\u5370\u6a5f\u3001CNC \u6a5f\u5e8a\u7b49\u3002"}),"\n",(0,i.jsx)(e.h3,{id:"\u6b65\u9032\u96fb\u6a5f\u63a7\u5236\u7684\u512a\u5316\u5efa\u8b70",children:"\u6b65\u9032\u96fb\u6a5f\u63a7\u5236\u7684\u512a\u5316\u5efa\u8b70"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u52a0\u901f\u548c\u6e1b\u901f"}),":\n\u70ba\u4e86\u5be6\u73fe\u66f4\u5e73\u6ed1\u7684\u904b\u52d5\u548c\u6e1b\u5c11\u6a5f\u68b0\u61c9\u529b\uff0c\u53ef\u4ee5\u5be6\u73fe\u52a0\u901f\u548c\u6e1b\u901f\u63a7\u5236\u3002\u9019\u53ef\u4ee5\u901a\u904e\u52d5\u614b\u8abf\u6574 MCPWM \u7684\u983b\u7387\u4f86\u5be6\u73fe\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u5fae\u6b65\u63a7\u5236"}),":\n\u5982\u679c\u6b65\u9032\u96fb\u6a5f\u9a45\u52d5\u5668\u652f\u6301\u5fae\u6b65\u63a7\u5236\uff0c\u53ef\u4ee5\u901a\u904e\u8abf\u6574 PWM \u5360\u7a7a\u6bd4\u4f86\u5be6\u73fe\u66f4\u7cbe\u7d30\u7684\u4f4d\u7f6e\u63a7\u5236\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u4f4d\u7f6e\u8ddf\u8e2a"}),":\n\u53ef\u4ee5\u6dfb\u52a0\u7de8\u78bc\u5668\u53cd\u994b\u4f86\u5be6\u73fe\u9589\u74b0\u63a7\u5236\uff0c\u63d0\u9ad8\u5b9a\u4f4d\u7cbe\u5ea6\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"\u591a\u8ef8\u5354\u8abf"}),":\n\u5c0d\u65bc\u9700\u8981\u591a\u500b\u96fb\u6a5f\u5354\u540c\u5de5\u4f5c\u7684\u61c9\u7528\uff08\u5982 3D \u6253\u5370\u6a5f\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u500b MCPWM \u55ae\u5143\u4e26\u540c\u6b65\u5b83\u5011\u7684\u64cd\u4f5c\u3002"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"mcpwm-\u9032\u968e\u529f\u80fd",children:"MCPWM \u9032\u968e\u529f\u80fd"}),"\n",(0,i.jsx)(e.p,{children:"ESP32 \u7684 MCPWM \u6a21\u7d44\u9084\u63d0\u4f9b\u4e86\u4e00\u4e9b\u9032\u968e\u529f\u80fd\uff0c\u53ef\u4ee5\u7528\u65bc\u66f4\u8907\u96dc\u7684\u61c9\u7528\u5834\u666f\uff1a"}),"\n",(0,i.jsx)(e.h3,{id:"1-\u6b7b\u5340\u63a7\u5236",children:"1. \u6b7b\u5340\u63a7\u5236"}),"\n",(0,i.jsx)(e.p,{children:"\u6b7b\u5340\u63a7\u5236\u5728\u9a45\u52d5\u534a\u6a4b\u6216\u5168\u6a4b\u96fb\u8def\u6642\u975e\u5e38\u91cd\u8981\uff0c\u53ef\u4ee5\u9632\u6b62\u4e0a\u4e0b\u7ba1\u540c\u6642\u5c0e\u901a\u9020\u6210\u77ed\u8def\u3002MCPWM \u6a21\u7d44\u652f\u6301\u786c\u4ef6\u7d1a\u7684\u6b7b\u5340\u63d2\u5165\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:"mcpwm_dead_time_config_t dead_time_config = {\n    .posedge_delay_ticks = 50, // \u4e0a\u5347\u6cbf\u5ef6\u9072\n    .negedge_delay_ticks = 50  // \u4e0b\u964d\u6cbf\u5ef6\u9072\n};\nESP_ERROR_CHECK(mcpwm_generator_set_dead_time(gen_a, gen_b, &dead_time_config));\n"})}),"\n",(0,i.jsx)(e.h3,{id:"2-\u6545\u969c\u8655\u7406",children:"2. \u6545\u969c\u8655\u7406"}),"\n",(0,i.jsx)(e.p,{children:"MCPWM \u6a21\u7d44\u53ef\u4ee5\u914d\u7f6e\u6545\u969c\u8f38\u5165\uff0c\u5728\u6aa2\u6e2c\u5230\u6545\u969c\u4fe1\u865f\u6642\u81ea\u52d5\u95dc\u9589\u8f38\u51fa\uff0c\u63d0\u9ad8\u7cfb\u7d71\u5b89\u5168\u6027\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:"mcpwm_fault_config_t fault_config = {\n    .fault_gpio_num = FAULT_GPIO,\n    .active_level = 0, // \u4f4e\u96fb\u5e73\u89f8\u767c\n};\nESP_ERROR_CHECK(mcpwm_new_fault(MCPWM_UNIT_0, &fault_config, &fault_handle));\n"})}),"\n",(0,i.jsx)(e.h3,{id:"3-\u540c\u6b65\u64cd\u4f5c",children:"3. \u540c\u6b65\u64cd\u4f5c"}),"\n",(0,i.jsx)(e.p,{children:"\u5c0d\u65bc\u9700\u8981\u7cbe\u78ba\u540c\u6b65\u7684\u591a\u96fb\u6a5f\u63a7\u5236\u61c9\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 MCPWM \u7684\u540c\u6b65\u529f\u80fd\uff1a"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:"mcpwm_sync_config_t sync_config = {\n    .sync_gpio_num = SYNC_GPIO,\n    .flags.on_rising_edge = true,\n};\nESP_ERROR_CHECK(mcpwm_timer_set_sync_src(timer, &sync_config));\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u7d50\u8ad6",children:"\u7d50\u8ad6"}),"\n",(0,i.jsx)(e.p,{children:"ESP32 \u7684 MCPWM \u6a21\u7d44\u662f\u4e00\u500b\u5f37\u5927\u800c\u9748\u6d3b\u7684\u5de5\u5177\uff0c\u7279\u5225\u9069\u5408\u5404\u7a2e\u96fb\u6a5f\u63a7\u5236\u61c9\u7528\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u53c3\u8003\u8cc7\u6599\uff1a"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"ESP32 \u6280\u8853\u53c3\u8003\u624b\u518a"}),"\n",(0,i.jsx)(e.li,{children:"ESP-IDF \u7de8\u7a0b\u6307\u5357"}),"\n",(0,i.jsx)(e.li,{children:"Espressif Systems \u5b98\u65b9\u6587\u6a94"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u5b8c\u6574\u4ee3\u7801",children:"\u5b8c\u6574\u4ee3\u7801"}),"\n",(0,i.jsx)(e.h3,{id:"\u4e92\u88dc\u8108\u5bec\u8abf\u88fd",children:"\u4e92\u88dc\u8108\u5bec\u8abf\u88fd"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",metastring:'title="mcpwm_normal_pwm_demo.c"',children:'#include "freertos/FreeRTOS.h"\n#include "freertos/task.h"\n#include "esp_log.h"\n#include "driver/mcpwm_prelude.h"\n#include <inttypes.h>\n\nstatic const char *TAG = "example";\n\n// \u5b9a\u7fa9 MCPWM \u53c3\u6578\n#define MCPWM_TIMER_RESOLUTION_HZ 10000000 // 10MHz, 1 tick = 0.1us\n#define MCPWM_FREQ_HZ_INITIAL     10000    // \u521d\u59cb\u983b\u7387\u70ba 10KHz\n#define MCPWM_GPIO_A              18       // PWM \u8f38\u51fa A \u7684 GPIO\n#define MCPWM_GPIO_B              21       // PWM \u8f38\u51fa B \u7684 GPIO\n#define MCPWM_DUTY_CYCLE_INITIAL  30       // \u521d\u59cb\u5360\u7a7a\u6bd4\u70ba 30%\n\n// PWM \u914d\u7f6e\u7d50\u69cb\u9ad4\ntypedef struct {\n    mcpwm_timer_handle_t timer;\n    mcpwm_oper_handle_t oper;\n    mcpwm_cmpr_handle_t cmpa;\n    mcpwm_cmpr_handle_t cmpb;\n    mcpwm_gen_handle_t gena;\n    mcpwm_gen_handle_t genb;\n} pwm_config_t;\n\n// \u521d\u59cb\u5316 PWM\nstatic pwm_config_t init_pwm(void) {\n    pwm_config_t config;\n\n    ESP_LOGI(TAG, "\u521d\u59cb\u5316 MCPWM \u6a21\u7d44");\n\n    // \u6b65\u9a5f 1: \u5275\u5efa MCPWM \u5b9a\u6642\u5668\n    mcpwm_timer_config_t timer_config = {\n        .group_id = 0,\n        .clk_src = MCPWM_TIMER_CLK_SRC_DEFAULT,\n        .resolution_hz = MCPWM_TIMER_RESOLUTION_HZ,\n        .period_ticks = MCPWM_TIMER_RESOLUTION_HZ / MCPWM_FREQ_HZ_INITIAL,\n        .count_mode = MCPWM_TIMER_COUNT_MODE_UP,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_timer(&timer_config, &config.timer));\n\n    // \u6b65\u9a5f 2: \u5275\u5efa MCPWM \u904b\u7b97\u5668\n    mcpwm_operator_config_t operator_config = {\n        .group_id = 0,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_operator(&operator_config, &config.oper));\n\n    // \u6b65\u9a5f 3: \u5c07\u5b9a\u6642\u5668\u9023\u63a5\u5230\u904b\u7b97\u5668\n    ESP_ERROR_CHECK(mcpwm_operator_connect_timer(config.oper, config.timer));\n\n    // \u6b65\u9a5f 4: \u5275\u5efa\u6bd4\u8f03\u5668\n    mcpwm_comparator_config_t comparator_config = {\n        .flags.update_cmp_on_tez = true,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_comparator(config.oper, &comparator_config, &config.cmpa));\n    ESP_ERROR_CHECK(mcpwm_new_comparator(config.oper, &comparator_config, &config.cmpb));\n\n    // \u6b65\u9a5f 5: \u5275\u5efa PWM \u751f\u6210\u5668\n    mcpwm_generator_config_t generator_config = {\n        .gen_gpio_num = MCPWM_GPIO_A,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_generator(config.oper, &generator_config, &config.gena));\n    generator_config.gen_gpio_num = MCPWM_GPIO_B;\n    ESP_ERROR_CHECK(mcpwm_new_generator(config.oper, &generator_config, &config.genb));\n\n    // \u6b65\u9a5f 6: \u8a2d\u7f6e\u751f\u6210\u5668 A \u7684\u52d5\u4f5c (\u5360\u7a7a\u6bd4)\n    ESP_ERROR_CHECK(mcpwm_generator_set_actions_on_timer_event(config.gena,\n        MCPWM_GEN_TIMER_EVENT_ACTION(MCPWM_TIMER_DIRECTION_UP, MCPWM_TIMER_EVENT_EMPTY, MCPWM_GEN_ACTION_HIGH),\n        MCPWM_GEN_TIMER_EVENT_ACTION_END()));\n    ESP_ERROR_CHECK(mcpwm_generator_set_actions_on_compare_event(config.gena,\n        MCPWM_GEN_COMPARE_EVENT_ACTION(MCPWM_TIMER_DIRECTION_UP, config.cmpa, MCPWM_GEN_ACTION_LOW),\n        MCPWM_GEN_COMPARE_EVENT_ACTION_END()));\n\n    // \u6b65\u9a5f 7: \u8a2d\u7f6e\u751f\u6210\u5668 B \u7684\u52d5\u4f5c (\u4e92\u88dc\u8f38\u51fa)\n    ESP_ERROR_CHECK(mcpwm_generator_set_actions_on_timer_event(config.genb,\n        MCPWM_GEN_TIMER_EVENT_ACTION(MCPWM_TIMER_DIRECTION_UP, MCPWM_TIMER_EVENT_EMPTY, MCPWM_GEN_ACTION_LOW),\n        MCPWM_GEN_TIMER_EVENT_ACTION_END()));\n    ESP_ERROR_CHECK(mcpwm_generator_set_actions_on_compare_event(config.genb,\n        MCPWM_GEN_COMPARE_EVENT_ACTION(MCPWM_TIMER_DIRECTION_UP, config.cmpa, MCPWM_GEN_ACTION_HIGH),\n        MCPWM_GEN_COMPARE_EVENT_ACTION_END()));\n\n    // \u6b65\u9a5f 8: \u8a2d\u7f6e\u521d\u59cb\u6bd4\u8f03\u503c (\u6c7a\u5b9a\u521d\u59cb\u5360\u7a7a\u6bd4)\n    uint32_t compare_val = (MCPWM_TIMER_RESOLUTION_HZ / MCPWM_FREQ_HZ_INITIAL) * MCPWM_DUTY_CYCLE_INITIAL / 100;\n    ESP_ERROR_CHECK(mcpwm_comparator_set_compare_value(config.cmpa, compare_val));\n    ESP_ERROR_CHECK(mcpwm_comparator_set_compare_value(config.cmpb, compare_val));\n\n    //adddd\n    // mcpwm_dead_time_config_t dead_time_config = {\n    //     .posedge_delay_ticks = 50,\n    //     .negedge_delay_ticks = 0,\n    // };\n    // ESP_ERROR_CHECK(mcpwm_generator_set_dead_time(config.cmpa, config.cmpa, &dead_time_config));\n    // dead_time_config.posedge_delay_ticks = 0;\n    // dead_time_config.negedge_delay_ticks = 100;\n    // ESP_ERROR_CHECK(mcpwm_generator_set_dead_time(config.cmpa, config.cmpb, &dead_time_config));\n    //adddd\n\n    // \u6b65\u9a5f 9: \u555f\u7528 MCPWM \u5b9a\u6642\u5668\n    ESP_ERROR_CHECK(mcpwm_timer_enable(config.timer));\n\n    // \u6b65\u9a5f 10: \u555f\u52d5 MCPWM \u5b9a\u6642\u5668\n    ESP_ERROR_CHECK(mcpwm_timer_start_stop(config.timer, MCPWM_TIMER_START_NO_STOP));\n\n    ESP_LOGI(TAG, "MCPWM \u4e92\u88dc\u8f38\u51fa\u5df2\u555f\u52d5");\n    ESP_LOGI(TAG, "GPIO%d: %d%% \u5360\u7a7a\u6bd4, GPIO%d: %d%% \u5360\u7a7a\u6bd4", \n             MCPWM_GPIO_A, MCPWM_DUTY_CYCLE_INITIAL, MCPWM_GPIO_B, 100 - MCPWM_DUTY_CYCLE_INITIAL);\n    ESP_LOGI(TAG, "\u983b\u7387: %dHz", MCPWM_FREQ_HZ_INITIAL);\n\n    return config;\n}\n\n// \u8a2d\u7f6e\u5360\u7a7a\u6bd4\nstatic void set_duty_cycle(pwm_config_t* config, float duty_cycle) {\n    uint32_t compare_val = (MCPWM_TIMER_RESOLUTION_HZ / MCPWM_FREQ_HZ_INITIAL) * duty_cycle / 100;\n    ESP_ERROR_CHECK(mcpwm_comparator_set_compare_value(config->cmpa, compare_val));\n    ESP_ERROR_CHECK(mcpwm_comparator_set_compare_value(config->cmpb, compare_val));\n}\n\n// \u8a2d\u7f6e\u983b\u7387\nstatic void set_frequency(pwm_config_t* config, uint32_t freq_hz) {\n    ESP_ERROR_CHECK(mcpwm_timer_set_period(config->timer, MCPWM_TIMER_RESOLUTION_HZ / freq_hz));\n}\n\nvoid app_main(void)\n{\n    // \u521d\u59cb\u5316 PWM \u914d\u7f6e\n    pwm_config_t pwm_config = init_pwm();\n\n    // \u521d\u59cb\u5360\u7a7a\u6bd4\u548c\u983b\u7387\n    float duty_cycle = MCPWM_DUTY_CYCLE_INITIAL;\n    uint32_t freq_hz = MCPWM_FREQ_HZ_INITIAL;\n\n    while (1) {\n        // \u6bcf 5 \u79d2\u9418\u6539\u8b8a\u4e00\u6b21\u5360\u7a7a\u6bd4 (30% -> 70% -> 30% ...)\n        duty_cycle = (duty_cycle == 30) ? 70 : 30;\n        set_duty_cycle(&pwm_config, duty_cycle);\n        ESP_LOGI(TAG, "\u5360\u7a7a\u6bd4\u5df2\u8a2d\u7f6e\u70ba %.0f%%", duty_cycle);\n\n        vTaskDelay(pdMS_TO_TICKS(5000));\n\n        // \u6bcf 10 \u79d2\u9418\u6539\u8b8a\u4e00\u6b21\u983b\u7387 (10kHz -> 5kHz -> 10kHz ...)\n        freq_hz = (freq_hz == 10000) ? 5000 : 10000;\n        set_frequency(&pwm_config, freq_hz);\n        ESP_LOGI(TAG, "\u983b\u7387\u5df2\u8a2d\u7f6e\u70ba %"PRIu32" Hz", freq_hz);\n\n        vTaskDelay(pdMS_TO_TICKS(5000));\n    }\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\u6b65\u9032\u96fb\u6a5f\u63a7\u5236",children:"\u6b65\u9032\u96fb\u6a5f\u63a7\u5236"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c++",metastring:'title="mcpwm_step_motor_demo.c"',children:'#include "freertos/FreeRTOS.h"          // FreeRTOS \u6a19\u982d\u6a94\u6848\n#include "freertos/task.h"              // FreeRTOS \u4efb\u52d9\u7ba1\u7406\n#include "esp_log.h"                    // ESP32 \u65e5\u8a8c\u8a18\u9304\n#include "driver/mcpwm_prelude.h"       // MCPWM \u9a45\u52d5\n#include "driver/gpio.h"                // GPIO \u9a45\u52d5\n#include <inttypes.h>                   // \u6a19\u6e96\u6574\u6578\u985e\u578b\u5b9a\u7fa9\n\nstatic const char *TAG = "stepper_example"; // \u65e5\u8a8c\u6a19\u7c64\n\n#define MCPWM_TIMER_RESOLUTION_HZ 1000000  // MCPWM \u8a08\u6642\u5668\u5206\u8fa8\u7387\uff0c1MHz\uff0c\u5373 1 \u500b tick \u70ba 1 \u5fae\u79d2\n#define MCPWM_FREQ_HZ             10000    // MCPWM \u983b\u7387\uff0c10kHz\uff0c\u53ef\u4ee5\u6839\u64da\u9700\u8981\u8abf\u6574\n#define MCPWM_GPIO_STEP           18       // \u6b65\u9032\u8108\u885d\u8f38\u51fa\u7684 GPIO\n#define MCPWM_GPIO_DIR            22       // \u65b9\u5411\u63a7\u5236\u7684 GPIO\n\n// \u5b9a\u7fa9\u6b65\u9032\u96fb\u6a5f\u914d\u7f6e\u7d50\u69cb\u9ad4\ntypedef struct {\n    mcpwm_timer_handle_t timer;\n    mcpwm_oper_handle_t oper;\n    mcpwm_cmpr_handle_t cmpr;\n    mcpwm_gen_handle_t gen;\n    int target_steps;                // \u76ee\u6a19\u6b65\u6578\n    volatile int current_steps;      // \u7576\u524d\u6b65\u6578\n    bool direction;                  // \u65b9\u5411\n} stepper_config_t;\n\nstatic stepper_config_t stepper_config; // \u5168\u5c40\u6b65\u9032\u96fb\u6a5f\u914d\u7f6e\n\n// MCPWM \u4e2d\u65b7\u8655\u7406\u51fd\u6578\nstatic bool IRAM_ATTR mcpwm_isr_handler(mcpwm_timer_handle_t timer, const mcpwm_timer_event_data_t *edata, void *user_data)\n{\n    stepper_config_t *config = (stepper_config_t *)user_data; // \u53d6\u5f97\u6b65\u9032\u96fb\u6a5f\u914d\u7f6e\n    \n    if (config->current_steps < config->target_steps) {\n        config->current_steps++; // \u589e\u52a0\u7576\u524d\u6b65\u6578\n        return true;  // \u7e7c\u7e8c\u7522\u751f\u8108\u885d\n    } else {\n        ESP_ERROR_CHECK(mcpwm_timer_start_stop(config->timer, MCPWM_TIMER_STOP_FULL)); // \u505c\u6b62\u8a08\u6642\u5668\n        return false;  // \u505c\u6b62\u8a08\u6642\u5668\n    }\n}\n\n// \u521d\u59cb\u5316\u6b65\u9032\u96fb\u6a5f\u7684 MCPWM \u63a7\u5236\nstatic void init_stepper_mcpwm(void) {\n    ESP_LOGI(TAG, "\u521d\u59cb\u5316\u6b65\u9032\u96fb\u6a5f MCPWM \u63a7\u5236");\n\n    // \u914d\u7f6e MCPWM \u8a08\u6642\u5668\n    mcpwm_timer_config_t timer_config = {\n        .group_id = 0,\n        .clk_src = MCPWM_TIMER_CLK_SRC_DEFAULT,\n        .resolution_hz = MCPWM_TIMER_RESOLUTION_HZ,\n        .period_ticks = MCPWM_TIMER_RESOLUTION_HZ / MCPWM_FREQ_HZ,\n        .count_mode = MCPWM_TIMER_COUNT_MODE_UP,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_timer(&timer_config, &stepper_config.timer));\n\n    // \u914d\u7f6e MCPWM \u64cd\u4f5c\u5668\n    mcpwm_operator_config_t operator_config = {\n        .group_id = 0,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_operator(&operator_config, &stepper_config.oper));\n\n    ESP_ERROR_CHECK(mcpwm_operator_connect_timer(stepper_config.oper, stepper_config.timer));\n\n    // \u914d\u7f6e MCPWM \u6bd4\u8f03\u5668\n    mcpwm_comparator_config_t comparator_config = {\n        .flags.update_cmp_on_tez = true,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_comparator(stepper_config.oper, &comparator_config, &stepper_config.cmpr));\n\n    // \u914d\u7f6e MCPWM \u7522\u751f\u5668\n    mcpwm_generator_config_t generator_config = {\n        .gen_gpio_num = MCPWM_GPIO_STEP,\n    };\n    ESP_ERROR_CHECK(mcpwm_new_generator(stepper_config.oper, &generator_config, &stepper_config.gen));\n\n    // \u8a2d\u7f6e MCPWM \u7522\u751f\u5668\u5728\u8a08\u6642\u5668\u4e8b\u4ef6\u4e0a\u7684\u52d5\u4f5c\n    ESP_ERROR_CHECK(mcpwm_generator_set_actions_on_timer_event(stepper_config.gen,\n        MCPWM_GEN_TIMER_EVENT_ACTION(MCPWM_TIMER_DIRECTION_UP, MCPWM_TIMER_EVENT_EMPTY, MCPWM_GEN_ACTION_HIGH),\n        MCPWM_GEN_TIMER_EVENT_ACTION_END()));\n    ESP_ERROR_CHECK(mcpwm_generator_set_actions_on_compare_event(stepper_config.gen,\n        MCPWM_GEN_COMPARE_EVENT_ACTION(MCPWM_TIMER_DIRECTION_UP, stepper_config.cmpr, MCPWM_GEN_ACTION_LOW),\n        MCPWM_GEN_COMPARE_EVENT_ACTION_END()));\n\n    // \u8a2d\u7f6e MCPWM \u6bd4\u8f03\u5668\u7684\u6bd4\u8f03\u503c\n    ESP_ERROR_CHECK(mcpwm_comparator_set_compare_value(stepper_config.cmpr, MCPWM_TIMER_RESOLUTION_HZ / MCPWM_FREQ_HZ / 2));\n\n    // \u8a3b\u518a MCPWM \u8a08\u6642\u5668\u4e8b\u4ef6\u56de\u8abf\n    ESP_ERROR_CHECK(mcpwm_timer_register_event_callbacks(stepper_config.timer, \n        &(mcpwm_timer_event_callbacks_t){\n            .on_full = mcpwm_isr_handler,\n        }, &stepper_config));\n\n    // \u555f\u7528 MCPWM \u8a08\u6642\u5668\n    ESP_ERROR_CHECK(mcpwm_timer_enable(stepper_config.timer));\n\n    // \u521d\u59cb\u5316\u65b9\u5411\u63a7\u5236 GPIO\n    gpio_config_t io_conf = {\n        .intr_type = GPIO_INTR_DISABLE,\n        .mode = GPIO_MODE_OUTPUT,\n        .pin_bit_mask = (1ULL << MCPWM_GPIO_DIR),\n        .pull_down_en = 0,\n        .pull_up_en = 1  // \u555f\u7528\u5167\u90e8\u4e0a\u62c9\n    };\n    gpio_config(&io_conf);\n\n    // \u78ba\u4fdd\u65b9\u5411\u5f15\u8173\u521d\u59cb\u72c0\u614b\n    gpio_set_level(MCPWM_GPIO_DIR, 0);\n\n    ESP_LOGI(TAG, "\u6b65\u9032\u96fb\u6a5f MCPWM \u63a7\u5236\u521d\u59cb\u5316\u5b8c\u6210");\n    ESP_LOGI(TAG, "MCPWM \u6b65\u9032\u5f15\u8173: %d, \u65b9\u5411\u5f15\u8173: %d", MCPWM_GPIO_STEP, MCPWM_GPIO_DIR);\n}\n\n// \u63a7\u5236\u6b65\u9032\u96fb\u6a5f\u79fb\u52d5\nstatic void move_stepper(int steps, bool direction) {\n    ESP_LOGI(TAG, "\u6e96\u5099\u79fb\u52d5\u6b65\u9032\u96fb\u6a5f\uff1a%d \u6b65, \u65b9\u5411\uff1a%s", steps, direction ? "\u6b63\u5411" : "\u53cd\u5411");\n\n    // \u6aa2\u67e5\u7576\u524d GPIO \u72c0\u614b\n    int current_dir = gpio_get_level(MCPWM_GPIO_DIR);\n    ESP_LOGI(TAG, "\u7576\u524d\u65b9\u5411\u5f15\u8173\u72c0\u614b: %d", current_dir);\n\n    // \u78ba\u4fdd\u4e0a\u4e00\u6b21\u79fb\u52d5\u5df2\u7d93\u5b8c\u5168\u505c\u6b62\n    while (stepper_config.current_steps < stepper_config.target_steps) {\n        vTaskDelay(1);\n    }\n\n    // \u505c\u6b62\u8a08\u6642\u5668\n    ESP_ERROR_CHECK(mcpwm_timer_start_stop(stepper_config.timer, MCPWM_TIMER_STOP_FULL));\n    ESP_LOGI(TAG, "MCPWM \u8a08\u6642\u5668\u5df2\u505c\u6b62");\n\n    // \u8a2d\u7f6e\u65b0\u7684\u65b9\u5411\n    gpio_set_level(MCPWM_GPIO_DIR, direction);\n    ESP_LOGI(TAG, "\u65b9\u5411\u5df2\u8a2d\u7f6e\u70ba: %d", direction);\n\n    // \u6dfb\u52a0\u77ed\u66ab\u5ef6\u9072\uff0c\u78ba\u4fdd\u65b9\u5411\u4fe1\u865f\u7a69\u5b9a\n    vTaskDelay(pdMS_TO_TICKS(5));\n\n    // \u518d\u6b21\u6aa2\u67e5 GPIO \u72c0\u614b\n    current_dir = gpio_get_level(MCPWM_GPIO_DIR);\n    ESP_LOGI(TAG, "\u8a2d\u7f6e\u5f8c\u65b9\u5411\u5f15\u8173\u72c0\u614b: %d", current_dir);\n\n    // \u66f4\u65b0\u6b65\u9032\u914d\u7f6e\n    stepper_config.target_steps = steps;\n    stepper_config.current_steps = 0;\n    stepper_config.direction = direction;\n\n    // \u555f\u52d5\u8a08\u6642\u5668\uff0c\u958b\u59cb\u6b65\u9032\n    ESP_ERROR_CHECK(mcpwm_timer_start_stop(stepper_config.timer, MCPWM_TIMER_START_NO_STOP));\n    ESP_LOGI(TAG, "MCPWM \u8a08\u6642\u5668\u5df2\u555f\u52d5\uff0c\u958b\u59cb\u79fb\u52d5");\n}\n\n// \u4e3b\u61c9\u7528\u7a0b\u5e8f\u5165\u53e3\nvoid app_main(void)\n{\n    init_stepper_mcpwm(); // \u521d\u59cb\u5316\u6b65\u9032\u96fb\u6a5f MCPWM \u63a7\u5236\n\n    while (1) {\n        // \u6b63\u5411\u65cb\u8f49 20000 \u6b65\n        move_stepper(20000, true);\n        while (stepper_config.current_steps < stepper_config.target_steps) {\n            vTaskDelay(1);\n        }\n        ESP_LOGI(TAG, "\u5b8c\u6210\u6b63\u5411\u65cb\u8f49 20000 \u6b65");\n        vTaskDelay(pdMS_TO_TICKS(2000)); // \u5ef6\u9072 2 \u79d2\n\n        // \u53cd\u5411\u65cb\u8f49 20000 \u6b65\n        move_stepper(20000, false);\n        while (stepper_config.current_steps < stepper_config.target_steps) {\n            vTaskDelay(1);\n        }\n        ESP_LOGI(TAG, "\u5b8c\u6210\u53cd\u5411\u65cb\u8f49 20000 \u6b65");\n        vTaskDelay(pdMS_TO_TICKS(2000)); // \u5ef6\u9072 2 \u79d2\n    }\n}\n'})})]})}function M(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}},8453:(n,e,_)=>{_.d(e,{R:()=>t,x:()=>o});var i=_(6540);const r={},c=i.createContext(r);function t(n){const e=i.useContext(c);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),i.createElement(c.Provider,{value:e},n.children)}}}]);