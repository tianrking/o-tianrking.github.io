"use strict";(self.webpackChunkEl_Jardin_Secreto_de_w0x7ce=self.webpackChunkEl_Jardin_Secreto_de_w0x7ce||[]).push([[1850],{4277:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>_,metadata:()=>s,toc:()=>r});var l=i(4848),c=i(8453);const _={slug:"rp2040-pwm-usage-and-examples",title:"Detailed Explanation of PWM Usage and Examples in RP2040",authors:[{name:"w0x7ce",title:"Embedded Systems Engineer",url:"https://github.com/tianrking",image_url:"https://github.com/tianrking.png"}],tags:["RP2040","PWM","Raspberry Pi Pico","Embedded Systems"]},t=void 0,s={id:"micro-controladores/RP2040/rp2040-pwm-usage-and-examples",title:"Detailed Explanation of PWM Usage and Examples in RP2040",description:"\u5728\u9019\u7bc7\u6587\u7ae0\u4e2d,\u6211\u5c07\u70ba\u5927\u5bb6\u8a73\u7d30\u8b1b\u89e3\u5982\u4f55\u5728 RP2040 \u4e2d\u4f7f\u7528 PWM\uff08Pulse Width Modulation,\u8108\u885d\u5bec\u5ea6\u8abf\u88fd\uff09\u529f\u80fd\u3002\u6211\u5011\u5c07\u901a\u904e\u4e09\u500b\u5177\u9ad4\u7684\u7a0b\u5e8f\u793a\u4f8b,\u6df1\u5165\u4e86\u89e3 PWM \u7684\u5de5\u4f5c\u539f\u7406,\u4ee5\u53ca\u5982\u4f55\u5728 RP2040 \u4e2d\u914d\u7f6e\u548c\u4f7f\u7528 PWM\u3002\u7121\u8ad6\u4f60\u662f\u60f3\u8981\u8f38\u51fa PWM \u4fe1\u865f\u3001\u63a7\u5236 LED \u4eae\u5ea6,\u9084\u662f\u6e2c\u91cf PWM \u4fe1\u865f\u7684\u4f54\u7a7a\u6bd4,\u9019\u7bc7\u6587\u7ae0\u90fd\u5c07\u70ba\u4f60\u63d0\u4f9b\u8a73\u76e1\u7684\u6307\u5c0e\u3002",source:"@site/docs/micro-controladores/RP2040/rp2040-pwm-usage-and-examples.md",sourceDirName:"micro-controladores/RP2040",slug:"/micro-controladores/RP2040/rp2040-pwm-usage-and-examples",permalink:"/micro-controladores/RP2040/rp2040-pwm-usage-and-examples",draft:!1,unlisted:!1,editUrl:"https://github.com/tianrking/tianrking.github.io/tree/V3.4/docs/micro-controladores/RP2040/rp2040-pwm-usage-and-examples.md",tags:[{inline:!0,label:"RP2040",permalink:"/tags/rp-2040"},{inline:!0,label:"PWM",permalink:"/tags/pwm"},{inline:!0,label:"Raspberry Pi Pico",permalink:"/tags/raspberry-pi-pico"},{inline:!0,label:"Embedded Systems",permalink:"/tags/embedded-systems"}],version:"current",lastUpdatedAt:1721016005e3,frontMatter:{slug:"rp2040-pwm-usage-and-examples",title:"Detailed Explanation of PWM Usage and Examples in RP2040",authors:[{name:"w0x7ce",title:"Embedded Systems Engineer",url:"https://github.com/tianrking",image_url:"https://github.com/tianrking.png"}],tags:["RP2040","PWM","Raspberry Pi Pico","Embedded Systems"]},sidebar:"tutorialSidebar",previous:{title:"UART Interrupt Handling and Data Transmission in RP2040",permalink:"/micro-controladores/RP2040/rp2040-uart-interrupt-handling-and-usage"},next:{title:"Timer and Alarm Usage in RP2040",permalink:"/micro-controladores/RP2040/rp2040-timer-and-alarm-usage"}},d={},r=[{value:"PWM \u57fa\u790e\u77e5\u8b58",id:"pwm-\u57fa\u790e\u77e5\u8b58",level:2},{value:"PWM \u7684\u914d\u7f6e\u6a21\u5f0f\u53ca\u8a2d\u7f6e",id:"pwm-\u7684\u914d\u7f6e\u6a21\u5f0f\u53ca\u8a2d\u7f6e",level:2},{value:"\u81ea\u7531\u904b\u884c\u6a21\u5f0f\uff08Free-running mode\uff09",id:"\u81ea\u7531\u904b\u884c\u6a21\u5f0ffree-running-mode",level:3},{value:"\u8a08\u6578\u6a21\u5f0f\uff08Counter mode\uff09",id:"\u8a08\u6578\u6a21\u5f0fcounter-mode",level:3},{value:"\u76f8\u4f4d\u6821\u6b63\u6a21\u5f0f\uff08Phase-correct mode\uff09",id:"\u76f8\u4f4d\u6821\u6b63\u6a21\u5f0fphase-correct-mode",level:3},{value:"\u8a2d\u7f6e PWM \u983b\u7387\u548c\u4f54\u7a7a\u6bd4",id:"\u8a2d\u7f6e-pwm-\u983b\u7387\u548c\u4f54\u7a7a\u6bd4",level:3},{value:"\u7a0b\u5e8f\u793a\u4f8b 1: \u8f38\u51fa PWM \u4fe1\u865f",id:"\u7a0b\u5e8f\u793a\u4f8b-1-\u8f38\u51fa-pwm-\u4fe1\u865f",level:2},{value:"\u7a0b\u5e8f\u793a\u4f8b 2: \u4f7f\u7528 PWM \u63a7\u5236 LED \u4eae\u5ea6",id:"\u7a0b\u5e8f\u793a\u4f8b-2-\u4f7f\u7528-pwm-\u63a7\u5236-led-\u4eae\u5ea6",level:2},{value:"\u7a0b\u5e8f\u793a\u4f8b 3: \u6e2c\u91cf PWM \u4fe1\u865f\u7684\u4f54\u7a7a\u6bd4",id:"\u7a0b\u5e8f\u793a\u4f8b-3-\u6e2c\u91cf-pwm-\u4fe1\u865f\u7684\u4f54\u7a7a\u6bd4",level:2},{value:"\u55ae\u7368\u4f7f\u7528 PWM",id:"\u55ae\u7368\u4f7f\u7528-pwm",level:2},{value:"\u63a7\u5236\u76f4\u6d41\u96fb\u6a5f",id:"\u63a7\u5236\u76f4\u6d41\u96fb\u6a5f",level:3},{value:"\u63a7\u5236\u6b65\u9032\u96fb\u6a5f",id:"\u63a7\u5236\u6b65\u9032\u96fb\u6a5f",level:3},{value:"\u6539\u8b8a\u6b65\u9032\u96fb\u6a5f\u65cb\u8f49\u65b9\u5411",id:"\u6539\u8b8a\u6b65\u9032\u96fb\u6a5f\u65cb\u8f49\u65b9\u5411",level:5},{value:"\u7a0b\u5f0f\u78bc\u4e2d\u7684\u6578\u5b57\u53c3\u6578",id:"\u7a0b\u5f0f\u78bc\u4e2d\u7684\u6578\u5b57\u53c3\u6578",level:5},{value:"\u5176\u4ed6 PWM \u914d\u7f6e",id:"\u5176\u4ed6-pwm-\u914d\u7f6e",level:5},{value:"\u63a7\u5236\u4f3a\u670d\u6a5f",id:"\u63a7\u5236\u4f3a\u670d\u6a5f",level:3},{value:"\u4f7f\u7528 PWM \u4f5c\u70ba\u8f38\u5165\u6355\u7372",id:"\u4f7f\u7528-pwm-\u4f5c\u70ba\u8f38\u5165\u6355\u7372",level:3},{value:"\u7e3d\u7d50",id:"\u7e3d\u7d50",level:2}];function o(n){const e={admonition:"admonition",code:"code",div:"div",h2:"h2",h3:"h3",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.p,{children:"\u5728\u9019\u7bc7\u6587\u7ae0\u4e2d,\u6211\u5c07\u70ba\u5927\u5bb6\u8a73\u7d30\u8b1b\u89e3\u5982\u4f55\u5728 RP2040 \u4e2d\u4f7f\u7528 PWM\uff08Pulse Width Modulation,\u8108\u885d\u5bec\u5ea6\u8abf\u88fd\uff09\u529f\u80fd\u3002\u6211\u5011\u5c07\u901a\u904e\u4e09\u500b\u5177\u9ad4\u7684\u7a0b\u5e8f\u793a\u4f8b,\u6df1\u5165\u4e86\u89e3 PWM \u7684\u5de5\u4f5c\u539f\u7406,\u4ee5\u53ca\u5982\u4f55\u5728 RP2040 \u4e2d\u914d\u7f6e\u548c\u4f7f\u7528 PWM\u3002\u7121\u8ad6\u4f60\u662f\u60f3\u8981\u8f38\u51fa PWM \u4fe1\u865f\u3001\u63a7\u5236 LED \u4eae\u5ea6,\u9084\u662f\u6e2c\u91cf PWM \u4fe1\u865f\u7684\u4f54\u7a7a\u6bd4,\u9019\u7bc7\u6587\u7ae0\u90fd\u5c07\u70ba\u4f60\u63d0\u4f9b\u8a73\u76e1\u7684\u6307\u5c0e\u3002"}),"\n",(0,l.jsx)(e.h2,{id:"pwm-\u57fa\u790e\u77e5\u8b58",children:"PWM \u57fa\u790e\u77e5\u8b58"}),"\n",(0,l.jsx)(e.p,{children:"PWM \u662f\u4e00\u7a2e\u5e38\u7528\u7684\u6578\u4f4d\u4fe1\u865f\u8655\u7406\u6280\u8853,\u901a\u904e\u6539\u8b8a\u8108\u885d\u7684\u5bec\u5ea6\u4f86\u8abf\u88fd\u4fe1\u865f\u7684\u5e73\u5747\u503c\u3002\u5728 RP2040 \u4e2d,PWM \u529f\u80fd\u7531\u5c08\u9580\u7684\u786c\u9ad4\u6a21\u7d44\u63d0\u4f9b,\u53ef\u4ee5\u751f\u6210 PWM \u4fe1\u865f\u4e26\u63a7\u5236\u5176\u53c3\u6578,\u5982\u983b\u7387\u3001\u4f54\u7a7a\u6bd4\u7b49\u3002"}),"\n",(0,l.jsx)(e.p,{children:"PWM \u4fe1\u865f\u7531\u4e00\u7cfb\u5217\u8108\u885d\u7d44\u6210,\u6bcf\u500b\u8108\u885d\u7684\u5bec\u5ea6\u6c7a\u5b9a\u4e86\u4fe1\u865f\u7684\u4f54\u7a7a\u6bd4\u3002\u4f54\u7a7a\u6bd4\u662f\u6307\u8108\u885d\u7684\u9ad8\u96fb\u5e73\u6642\u9593\u8207\u6574\u500b\u9031\u671f\u7684\u6bd4\u503c,\u901a\u5e38\u4ee5\u767e\u5206\u6bd4\u8868\u793a\u3002\u901a\u904e\u6539\u8b8a PWM \u4fe1\u865f\u7684\u4f54\u7a7a\u6bd4,\u6211\u5011\u53ef\u4ee5\u8abf\u7bc0\u8f38\u51fa\u7684\u5e73\u5747\u96fb\u58d3,\u5f9e\u800c\u5be6\u73fe\u5c0d\u9023\u63a5\u8a2d\u5099\u7684\u63a7\u5236\u3002"}),"\n",(0,l.jsx)(e.p,{children:"RP2040 \u7684 PWM \u6a21\u7d44\u63d0\u4f9b\u4e86\u591a\u500b PWM \u901a\u9053,\u6bcf\u500b\u901a\u9053\u90fd\u53ef\u4ee5\u7368\u7acb\u914d\u7f6e\u548c\u63a7\u5236\u3002\u9019\u4f7f\u5f97\u6211\u5011\u53ef\u4ee5\u540c\u6642\u8f38\u51fa\u591a\u500b PWM \u4fe1\u865f,\u4e26\u5c0d\u5b83\u5011\u9032\u884c\u7cbe\u78ba\u7684\u63a7\u5236\u3002"}),"\n",(0,l.jsx)(e.p,{children:"\u597d\u7684,\u4ee5\u4e0b\u662f\u65b0\u589e\u7684\u958b\u982d\u6bb5\u843d,\u8a73\u7d30\u4ecb\u7d39\u4e86 PWM \u7684\u5404\u7a2e\u914d\u7f6e\u6a21\u5f0f\u3001\u4f5c\u7528\u4ee5\u53ca\u5982\u4f55\u8a2d\u7f6e:"}),"\n",(0,l.jsx)(e.h2,{id:"pwm-\u7684\u914d\u7f6e\u6a21\u5f0f\u53ca\u8a2d\u7f6e",children:"PWM \u7684\u914d\u7f6e\u6a21\u5f0f\u53ca\u8a2d\u7f6e"}),"\n",(0,l.jsx)(e.p,{children:"\u5728 RP2040 \u4e2d,PWM \u6a21\u7d44\u63d0\u4f9b\u4e86\u591a\u7a2e\u914d\u7f6e\u6a21\u5f0f,\u53ef\u4ee5\u6839\u64da\u4e0d\u540c\u7684\u61c9\u7528\u9700\u6c42\u9032\u884c\u8a2d\u7f6e\u3002\u6bcf\u7a2e\u6a21\u5f0f\u90fd\u6709\u5176\u7279\u5b9a\u7684\u4f5c\u7528\u548c\u914d\u7f6e\u65b9\u6cd5\u3002\u4e0b\u9762\u6211\u5011\u4f86\u8a73\u7d30\u4ecb\u7d39\u4e00\u4e0b\u9019\u4e9b\u6a21\u5f0f:"}),"\n",(0,l.jsx)(e.h3,{id:"\u81ea\u7531\u904b\u884c\u6a21\u5f0ffree-running-mode",children:"\u81ea\u7531\u904b\u884c\u6a21\u5f0f\uff08Free-running mode\uff09"}),"\n",(0,l.jsxs)(e.p,{children:["\u81ea\u7531\u904b\u884c\u6a21\u5f0f\u662f PWM \u7684\u9ed8\u8a8d\u6a21\u5f0f\u3002\u5728\u9019\u7a2e\u6a21\u5f0f\u4e0b,PWM \u8a08\u6578\u5668\u6703\u4e0d\u65b7\u5730\u5f9e 0 \u8a08\u6578\u5230\u8a2d\u5b9a\u7684\u6700\u5927\u503c\uff08\u901a\u904e ",(0,l.jsx)(e.code,{children:"pwm_config_set_wrap"})," \u51fd\u6578\u8a2d\u7f6e\uff09,\u7136\u5f8c\u518d\u5f9e 0 \u958b\u59cb\u91cd\u8907\u8a08\u6578\u3002\u7576\u8a08\u6578\u5668\u7684\u503c\u8207\u6bd4\u8f03\u5668\u7684\u503c\u76f8\u7b49\u6642,PWM \u8f38\u51fa\u6703\u6839\u64da\u8a2d\u7f6e\u7684\u96fb\u5e73\uff08\u9ad8\u96fb\u5e73\u6216\u4f4e\u96fb\u5e73\uff09\u9032\u884c\u5207\u63db\u3002"]}),"\n",(0,l.jsx)(e.p,{children:"\u9002\u7528\u573a\u666f\uff1a\u7528\u65bc\u666e\u901a\u7684PWM\u8f38\u51fa\uff0c\u4f8b\u5982LED\u4eae\u5ea6\u8abf\u7bc0\u3001\u96fb\u6a5f\u901f\u5ea6\u63a7\u5236\u7b49\uff0c\u9700\u8981\u5b9a\u671f\u7684\u5468\u671f\u6027PWM\u4fe1\u53f7\u3002"}),"\n",(0,l.jsx)(e.p,{children:"\u8981\u5c07 PWM \u914d\u7f6e\u70ba\u81ea\u7531\u904b\u884c\u6a21\u5f0f,\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u78bc:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:"pwm_config config = pwm_get_default_config();\npwm_config_set_wrap(&config, 65535);\npwm_init(slice_num, &config, true);\n"})}),"\n",(0,l.jsxs)(e.p,{children:["\u5728\u4e0a\u9762\u7684\u4ee3\u78bc\u4e2d,\u6211\u5011\u9996\u5148\u4f7f\u7528 ",(0,l.jsx)(e.code,{children:"pwm_get_default_config"})," \u51fd\u6578\u7372\u53d6 PWM \u7684\u9ed8\u8a8d\u914d\u7f6e,\u7136\u5f8c\u4f7f\u7528 ",(0,l.jsx)(e.code,{children:"pwm_config_set_wrap"})," \u51fd\u6578\u8a2d\u7f6e PWM \u8a08\u6578\u5668\u7684\u6700\u5927\u503c\u70ba 65535\u3002\u6700\u5f8c,\u4f7f\u7528 ",(0,l.jsx)(e.code,{children:"pwm_init"})," \u51fd\u6578\u521d\u59cb\u5316 PWM \u5207\u7247,\u4e26\u5c07\u914d\u7f6e\u61c9\u7528\u5230\u5207\u7247\u4e0a\u3002"]}),"\n",(0,l.jsx)(e.h3,{id:"\u8a08\u6578\u6a21\u5f0fcounter-mode",children:"\u8a08\u6578\u6a21\u5f0f\uff08Counter mode\uff09"}),"\n",(0,l.jsx)(e.p,{children:"\u5728\u8a08\u6578\u6a21\u5f0f\u4e0b,PWM \u8a08\u6578\u5668\u6703\u6839\u64da\u5916\u90e8\u8f38\u5165\u7684\u8108\u885d\u4fe1\u865f\u9032\u884c\u8a08\u6578\u3002\u9019\u7a2e\u6a21\u5f0f\u901a\u5e38\u7528\u65bc\u6e2c\u91cf\u5916\u90e8\u4fe1\u865f\u7684\u983b\u7387\u6216\u8108\u885d\u5bec\u5ea6\u3002\n\u9069\u7528\u5834\u666f\uff1a\u7528\u65bc\u6e2c\u91cf\u5916\u90e8\u8108\u885d\u4fe1\u865f\u7684\u983b\u7387\u6216\u8108\u885d\u5bec\u5ea6\uff0c\u901a\u5e38\u8207\u5916\u90e8\u8f38\u5165\u4fe1\u865f\u540c\u6b65\u8a08\u6578\u3002\n\u8981\u5c07 PWM \u914d\u7f6e\u70ba\u8a08\u6578\u6a21\u5f0f,\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u78bc:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:"pwm_config config = pwm_get_default_config();\npwm_config_set_clkdiv_mode(&config, PWM_DIV_B_RISING);\npwm_init(slice_num, &config, false);\n"})}),"\n",(0,l.jsxs)(e.p,{children:["\u5728\u4e0a\u9762\u7684\u4ee3\u78bc\u4e2d,\u6211\u5011\u4f7f\u7528 ",(0,l.jsx)(e.code,{children:"pwm_config_set_clkdiv_mode"})," \u51fd\u6578\u5c07 PWM \u7684\u6642\u9418\u5206\u983b\u6a21\u5f0f\u8a2d\u7f6e\u70ba ",(0,l.jsx)(e.code,{children:"PWM_DIV_B_RISING"}),",\u8868\u793a\u5728\u8f38\u5165\u4fe1\u865f\u7684\u4e0a\u5347\u6cbf\u9032\u884c\u8a08\u6578\u3002\u7136\u5f8c,\u4f7f\u7528 ",(0,l.jsx)(e.code,{children:"pwm_init"})," \u51fd\u6578\u521d\u59cb\u5316 PWM \u5207\u7247,\u4e26\u5c07\u914d\u7f6e\u61c9\u7528\u5230\u5207\u7247\u4e0a\u3002"]}),"\n",(0,l.jsx)(e.h3,{id:"\u76f8\u4f4d\u6821\u6b63\u6a21\u5f0fphase-correct-mode",children:"\u76f8\u4f4d\u6821\u6b63\u6a21\u5f0f\uff08Phase-correct mode\uff09"}),"\n",(0,l.jsx)(e.p,{children:"\u76f8\u4f4d\u6821\u6b63\u6a21\u5f0f\u662f\u4e00\u7a2e\u7279\u6b8a\u7684 PWM \u6a21\u5f0f,\u5b83\u53ef\u4ee5\u7522\u751f\u5c0d\u7a31\u7684 PWM \u4fe1\u865f,\u4e26\u6e1b\u5c11\u8f38\u51fa\u4fe1\u865f\u7684\u8ae7\u6ce2\u5931\u771f\u3002\u5728\u9019\u7a2e\u6a21\u5f0f\u4e0b,PWM \u8a08\u6578\u5668\u5728\u9054\u5230\u6700\u5927\u503c\u5f8c\u6703\u5411\u4e0b\u8a08\u6578,\u800c\u4e0d\u662f\u76f4\u63a5\u91cd\u7f6e\u70ba 0\u3002\n\u9002\u7528\u573a\u666f\uff1a\u7522\u751f\u5c0d\u7a31\u7684PWM\u4fe1\u53f7\uff0c\u6e1b\u5c11\u8f38\u51fa\u4fe1\u865f\u7684\u8ae7\u6ce2\u5931\u771f\uff0c\u9069\u5408\u5c0dPWM\u4fe1\u865f\u8cea\u91cf\u8981\u6c42\u8f03\u9ad8\u7684\u61c9\u7528\u3002\n\u8981\u5c07 PWM \u914d\u7f6e\u70ba\u76f8\u4f4d\u6821\u6b63\u6a21\u5f0f,\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u78bc:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:"pwm_config config = pwm_get_default_config();\npwm_config_set_phase_correct(&config, true);\npwm_init(slice_num, &config, true);\n"})}),"\n",(0,l.jsxs)(e.p,{children:["\u5728\u4e0a\u9762\u7684\u4ee3\u78bc\u4e2d,\u6211\u5011\u4f7f\u7528 ",(0,l.jsx)(e.code,{children:"pwm_config_set_phase_correct"})," \u51fd\u6578\u5c07 PWM \u914d\u7f6e\u70ba\u76f8\u4f4d\u6821\u6b63\u6a21\u5f0f,\u7136\u5f8c\u4f7f\u7528 ",(0,l.jsx)(e.code,{children:"pwm_init"})," \u51fd\u6578\u521d\u59cb\u5316 PWM \u5207\u7247,\u4e26\u5c07\u914d\u7f6e\u61c9\u7528\u5230\u5207\u7247\u4e0a\u3002"]}),"\n",(0,l.jsx)(e.h3,{id:"\u8a2d\u7f6e-pwm-\u983b\u7387\u548c\u4f54\u7a7a\u6bd4",children:"\u8a2d\u7f6e PWM \u983b\u7387\u548c\u4f54\u7a7a\u6bd4"}),"\n",(0,l.jsx)(e.p,{children:"\u7121\u8ad6\u4f7f\u7528\u54ea\u7a2e PWM \u6a21\u5f0f,\u6211\u5011\u90fd\u9700\u8981\u8a2d\u7f6e PWM \u4fe1\u865f\u7684\u983b\u7387\u548c\u4f54\u7a7a\u6bd4\u3002PWM \u983b\u7387\u6c7a\u5b9a\u4e86 PWM \u4fe1\u865f\u7684\u9031\u671f,\u800c\u4f54\u7a7a\u6bd4\u6c7a\u5b9a\u4e86 PWM \u4fe1\u865f\u5728\u4e00\u500b\u9031\u671f\u5167\u9ad8\u96fb\u5e73\u7684\u6642\u9593\u6bd4\u4f8b\u3002"}),"\n",(0,l.jsx)(e.p,{children:"\u8981\u8a2d\u7f6e PWM \u983b\u7387,\u6211\u5011\u9700\u8981\u914d\u7f6e PWM \u7684\u6642\u9418\u5206\u983b\u5668\u548c\u5305\u88f9\u503c\u3002\u6642\u9418\u5206\u983b\u5668\u6c7a\u5b9a\u4e86 PWM \u8a08\u6578\u5668\u7684\u8a08\u6578\u901f\u5ea6,\u800c\u5305\u88f9\u503c\u6c7a\u5b9a\u4e86 PWM \u8a08\u6578\u5668\u7684\u6700\u5927\u503c\u3002PWM \u983b\u7387\u7684\u8a08\u7b97\u516c\u5f0f\u5982\u4e0b:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"PWM \u983b\u7387 = \u7cfb\u7d71\u6642\u9418\u983b\u7387 / (\u6642\u9418\u5206\u983b\u5668 * (\u5305\u88f9\u503c + 1))\n"})}),"\n",(0,l.jsx)(e.p,{children:"\u4f8b\u5982,\u5982\u679c\u7cfb\u7d71\u6642\u9418\u983b\u7387\u70ba 125 MHz,\u6642\u9418\u5206\u983b\u5668\u8a2d\u7f6e\u70ba 1.0\uff08\u4e0d\u5206\u983b\uff09,\u5305\u88f9\u503c\u8a2d\u7f6e\u70ba 1249,\u5247 PWM \u983b\u7387\u70ba:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"PWM \u983b\u7387 = 125 MHz / (1.0 * (1249 + 1)) = 100 kHz\n"})}),"\n",(0,l.jsx)(e.p,{children:"\u8981\u8a2d\u7f6e PWM \u4f54\u7a7a\u6bd4,\u6211\u5011\u9700\u8981\u914d\u7f6e PWM \u7684\u6bd4\u8f03\u5668\u503c\u3002\u6bd4\u8f03\u5668\u503c\u6c7a\u5b9a\u4e86 PWM \u4fe1\u865f\u5728\u4e00\u500b\u9031\u671f\u5167\u9ad8\u96fb\u5e73\u7684\u6642\u9593\u3002PWM \u4f54\u7a7a\u6bd4\u7684\u8a08\u7b97\u516c\u5f0f\u5982\u4e0b:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"PWM \u4f54\u7a7a\u6bd4 = \u6bd4\u8f03\u5668\u503c / (\u5305\u88f9\u503c + 1)\n"})}),"\n",(0,l.jsx)(e.p,{children:"\u4f8b\u5982,\u5982\u679c\u5305\u88f9\u503c\u8a2d\u7f6e\u70ba 1249,\u6bd4\u8f03\u5668\u503c\u8a2d\u7f6e\u70ba 624,\u5247 PWM \u4f54\u7a7a\u6bd4\u70ba:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"PWM \u4f54\u7a7a\u6bd4 = 624 / (1249 + 1) = 0.4992 \u2248 50%\n"})}),"\n",(0,l.jsx)(e.p,{children:"\u7d9c\u4e0a\u6240\u8ff0,\u901a\u904e\u5408\u7406\u914d\u7f6e PWM \u7684\u6a21\u5f0f\u3001\u983b\u7387\u548c\u4f54\u7a7a\u6bd4,\u6211\u5011\u53ef\u4ee5\u7522\u751f\u5404\u7a2e\u4e0d\u540c\u7279\u6027\u7684 PWM \u4fe1\u865f,\u4ee5\u6eff\u8db3\u4e0d\u540c\u7684\u61c9\u7528\u9700\u6c42\u3002\u7121\u8ad6\u662f\u96fb\u6a5f\u63a7\u5236\u3001\u4f3a\u670d\u6a5f\u63a7\u5236\u9084\u662f\u4fe1\u865f\u6aa2\u6e2c,\u90fd\u53ef\u4ee5\u901a\u904e\u9748\u6d3b\u914d\u7f6e PWM \u4f86\u5be6\u73fe\u3002"}),"\n",(0,l.jsx)(e.h2,{id:"\u7a0b\u5e8f\u793a\u4f8b-1-\u8f38\u51fa-pwm-\u4fe1\u865f",children:"\u7a0b\u5e8f\u793a\u4f8b 1: \u8f38\u51fa PWM \u4fe1\u865f"}),"\n",(0,l.jsx)(e.p,{children:"\u9996\u5148,\u8b93\u6211\u5011\u4f86\u770b\u4e00\u500b\u7c21\u55ae\u7684\u7a0b\u5e8f\u793a\u4f8b,\u6f14\u793a\u5982\u4f55\u5728 RP2040 \u4e0a\u8f38\u51fa PWM \u4fe1\u865f:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:'#include "pico/stdlib.h"\n#include "hardware/pwm.h"\n\nint main() {\n    // \u5c07 GPIO 0 \u548c GPIO 1 \u5206\u914d\u7d66 PWM\n    gpio_set_function(0, GPIO_FUNC_PWM);\n    gpio_set_function(1, GPIO_FUNC_PWM);\n\n    // \u627e\u5230\u9023\u63a5\u5230 GPIO 0 \u7684 PWM \u5207\u7247\uff08slice\uff09\u7de8\u865f\n    uint slice_num = pwm_gpio_to_slice_num(0);\n\n    // \u8a2d\u7f6e PWM \u9031\u671f\u70ba 4 \u500b\u5faa\u74b0\uff080 \u5230 3\uff09\n    pwm_set_wrap(slice_num, 3);\n\n    // \u8a2d\u7f6e\u901a\u9053 A \u5728\u4e0b\u964d\u6cbf\u4e4b\u524d\u8f38\u51fa\u9ad8\u96fb\u5e73\u4e00\u500b\u5faa\u74b0\n    pwm_set_chan_level(slice_num, PWM_CHAN_A, 1);\n\n    // \u8a2d\u7f6e\u901a\u9053 B \u5728\u4e0b\u964d\u6cbf\u4e4b\u524d\u521d\u59cb\u8f38\u51fa\u9ad8\u96fb\u5e73\u4e09\u500b\u5faa\u74b0\n    pwm_set_chan_level(slice_num, PWM_CHAN_B, 3);\n\n    // \u555f\u52d5 PWM\n    pwm_set_enabled(slice_num, true);\n}\n'})}),"\n",(0,l.jsx)(e.admonition,{type:"note",children:(0,l.jsx)(e.p,{children:"\u5728\u9019\u500b\u793a\u4f8b\u4e2d,\u6211\u5011\u5c07 GPIO 0 \u548c GPIO 1 \u5206\u914d\u7d66 PWM \u529f\u80fd,\u4e26\u627e\u5230\u9023\u63a5\u5230 GPIO 0 \u7684 PWM \u5207\u7247\uff08slice\uff09\u7de8\u865f\u3002\u7136\u5f8c,\u6211\u5011\u8a2d\u7f6e PWM \u9031\u671f\u70ba 4 \u500b\u5faa\u74b0,\u4e26\u914d\u7f6e\u901a\u9053 A \u548c\u901a\u9053 B \u7684\u8f38\u51fa\u96fb\u5e73\u3002\u6700\u5f8c,\u6211\u5011\u555f\u52d5 PWM,\u958b\u59cb\u8f38\u51fa PWM \u4fe1\u865f\u3002"})}),"\n",(0,l.jsxs)(e.p,{children:["\u503c\u5f97\u6ce8\u610f\u7684\u662f,\u6211\u5011\u4e5f\u53ef\u4ee5\u4f7f\u7528 ",(0,l.jsx)(e.code,{children:"pwm_set_gpio_level(gpio, x)"})," \u51fd\u6578,\u5b83\u6703\u81ea\u52d5\u67e5\u627e\u7d66\u5b9a GPIO \u7684\u6b63\u78ba\u5207\u7247\u548c\u901a\u9053,\u4e26\u8a2d\u7f6e\u8f38\u51fa\u96fb\u5e73\u3002"]}),"\n",(0,l.jsx)(e.h2,{id:"\u7a0b\u5e8f\u793a\u4f8b-2-\u4f7f\u7528-pwm-\u63a7\u5236-led-\u4eae\u5ea6",children:"\u7a0b\u5e8f\u793a\u4f8b 2: \u4f7f\u7528 PWM \u63a7\u5236 LED \u4eae\u5ea6"}),"\n",(0,l.jsx)(e.p,{children:"\u63a5\u4e0b\u4f86,\u8b93\u6211\u5011\u770b\u4e00\u500b\u66f4\u5be6\u7528\u7684\u4f8b\u5b50,\u6f14\u793a\u5982\u4f55\u7528\u4e00\u500b\u5207\u7247\u7684\u5169\u500b\u901a\u9053\u8f38\u51fa\u983b\u7387\u4e00\u81f4\u5360\u7a7a\u6bd4\u4e0d\u540c\u7684pwm\u6ce2\u5f62:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:'#include "pico/stdlib.h"\n#include "hardware/pwm.h"\n\n// PWM \u53c3\u6578\n#define PWM_FREQ 1000 // PWM \u983b\u7387\u70ba 1kHz\n#define PWM_DUTY_CYCLE 30 // PWM \u5360\u7a7a\u6bd4\u70ba 30%\n\nint main() {\n    // \u9078\u64c7\u8981\u4f7f\u7528\u7684GPIO\n    const uint GPIO0 = 0; // \u4f7f\u7528 GPIO 0\n    const uint GPIO1 = 1; // \u4f7f\u7528 GPIO 1\n\n    // \u5c07GPIO\u8a2d\u7f6e\u70baPWM\u529f\u80fd\n    gpio_set_function(GPIO0, GPIO_FUNC_PWM); // \u5c07 GPIO 0 \u8a2d\u7f6e\u70ba PWM \u529f\u80fd\n    gpio_set_function(GPIO1, GPIO_FUNC_PWM); // \u5c07 GPIO 1 \u8a2d\u7f6e\u70ba PWM \u529f\u80fd\n\n    // \u627e\u5230PWM\u5207\u7247\n    uint slice_num = pwm_gpio_to_slice_num(GPIO0); // \u7372\u53d6 GPIO 0 \u5c0d\u61c9\u7684 PWM \u5207\u7247\u7de8\u865f\n\n    // \u914d\u7f6ePWM\n    pwm_config config = pwm_get_default_config(); // \u7372\u53d6 PWM \u7684\u9ed8\u8a8d\u914d\u7f6e\n    // \u8a2d\u7f6e\u5206\u983b\u5668,\u4ee5\u78ba\u5b9a\u983b\u7387\n    // \u7cfb\u7d71\u6642\u9418\u983b\u7387\u70ba125MHz,\u983b\u7387 = 125MHz / \u5206\u983b\u5668 / (\u5305\u7d61\u503c + 1)\n    uint16_t div = 125000000 / PWM_FREQ / 10000; // \u8a08\u7b97\u5206\u983b\u5668\u503c\n    pwm_config_set_clkdiv(&config, div); // \u8a2d\u7f6e PWM \u5206\u983b\u5668\n    // \u8a2d\u7f6e\u5305\u7d61\u503c,\u4e5f\u5c31\u662f\u8a08\u6578\u5668\u7684\u6700\u5927\u503c\n    pwm_config_set_wrap(&config, 9999); // \u8a2d\u7f6e PWM \u8a08\u6578\u5668\u7684\u6700\u5927\u503c\u70ba 9999\n    // \u4f7f\u914d\u7f6e\u751f\u6548\n    pwm_init(slice_num, &config, true); // \u521d\u59cb\u5316 PWM \u4e26\u4f7f\u914d\u7f6e\u751f\u6548\n\n    // \u8a2d\u7f6ePWM\u5360\u7a7a\u6bd4\n    uint16_t level_a = 9999 * 35 / 100; // \u8a2d\u7f6e GPIO0 \u7684\u5360\u7a7a\u6bd4\u70ba 35%\n    uint16_t level_b = 9999 * 75 / 100; // \u8a2d\u7f6e GPIO1 \u7684\u5360\u7a7a\u6bd4\u70ba 75%\n    pwm_set_chan_level(slice_num, PWM_CHAN_A, level_a); // \u8a2d\u7f6e\u901a\u9053A (GPIO0) \u7684\u5360\u7a7a\u6bd4\n    pwm_set_chan_level(slice_num, PWM_CHAN_B, level_b); // \u8a2d\u7f6e\u901a\u9053B (GPIO1) \u7684\u5360\u7a7a\u6bd4\n\n    // \u8b93\u4e3b\u5faa\u74b0\u7a7a\u8f49,\u7dad\u6301PWM\u8f38\u51fa\n    while (1) {\n        tight_loop_contents(); // \u4e3b\u5faa\u74b0\u7a7a\u8f49\uff0c\u4fdd\u6301 PWM \u8f38\u51fa\n    }\n}\n\n// \u4e92\u88dc\u8f38\u51fa\n#include "pico/stdlib.h"\n#include "hardware/pwm.h"\n\n// PWM \u53c3\u6578\n#define PWM_FREQ 1000 // PWM \u983b\u7387\u70ba 1kHz\n#define PWM_DUTY_CYCLE 30 // PWM \u5360\u7a7a\u6bd4\u70ba 30%\n\nint main() {\n    // \u9078\u64c7\u8981\u4f7f\u7528\u7684GPIO\n    const uint GPIO0 = 0;\n    const uint GPIO1 = 1;\n\n    // \u5c07GPIO\u8a2d\u7f6e\u70baPWM\u529f\u80fd\n    gpio_set_function(GPIO0, GPIO_FUNC_PWM);\n    gpio_set_function(GPIO1, GPIO_FUNC_PWM);\n\n    // \u627e\u5230PWM\u5207\u7247\n    uint slice_num = pwm_gpio_to_slice_num(GPIO0);\n\n    // \u914d\u7f6ePWM\n    pwm_config config = pwm_get_default_config();\n    // \u555f\u7528\u76f8\u4f4d\u6821\u6b63\u6a21\u5f0f\n    pwm_config_set_phase_correct(&config, true);\n    // \u8a2d\u7f6e\u5206\u983b\u5668,\u4ee5\u78ba\u5b9a\u983b\u7387\n    // \u7cfb\u7d71\u6642\u9418\u983b\u7387\u70ba125MHz,\u983b\u7387 = 125MHz / \u5206\u983b\u5668 / (\u5305\u7d61\u503c + 1) / 2\n    // \u6ce8\u610f\u5728\u76f8\u4f4d\u6821\u6b63\u6a21\u5f0f\u4e0b,\u983b\u7387\u6703\u6e1b\u534a\n    uint16_t div = 125000000 / PWM_FREQ / 10000 / 2;\n    pwm_config_set_clkdiv(&config, div);\n    // \u8a2d\u7f6e\u5305\u7d61\u503c,\u4e5f\u5c31\u662f\u8a08\u6578\u5668\u7684\u6700\u5927\u503c\n    pwm_config_set_wrap(&config, 9999);\n    // \u8a2d\u7f6e\u8f38\u51fa\u6975\u6027\n    pwm_config_set_output_polarity(&config, false, true); // \u901a\u9053B\u53cd\u76f8\n    // \u4f7f\u914d\u7f6e\u751f\u6548\n    pwm_init(slice_num, &config, true);\n\n    // \u8a2d\u7f6ePWM\u5360\u7a7a\u6bd4\n    uint16_t level = 9999 * PWM_DUTY_CYCLE / 100;\n    pwm_set_both_levels(slice_num, level, level); // \u5169\u500b\u901a\u9053\u4f7f\u7528\u76f8\u540c\u7684\u5360\u7a7a\u6bd4\n\n    // \u8b93\u4e3b\u5faa\u74b0\u7a7a\u8f49,\u7dad\u6301PWM\u8f38\u51fa\n    while (1) {\n        tight_loop_contents();\n    }\n}\n\n'})}),"\n",(0,l.jsx)(e.div,{children:(0,l.jsx)(e.p,{children:"1\u500b\u5207\u7247 \u5169\u500b\u901a\u9053  \u76f8\u9130 GPIO \u662f\u4e00\u500b\u5207\u7247 \u5982 GPIO0&GPIO1  GPIO2&GPIO3"})}),"\n",(0,l.jsx)(e.h2,{id:"\u7a0b\u5e8f\u793a\u4f8b-3-\u6e2c\u91cf-pwm-\u4fe1\u865f\u7684\u4f54\u7a7a\u6bd4",children:"\u7a0b\u5e8f\u793a\u4f8b 3: \u6e2c\u91cf PWM \u4fe1\u865f\u7684\u4f54\u7a7a\u6bd4"}),"\n",(0,l.jsx)(e.p,{children:"\u6700\u5f8c,\u8b93\u6211\u5011\u770b\u4e00\u500b\u793a\u4f8b,\u6f14\u793a\u5982\u4f55\u4f7f\u7528 RP2040 \u7684 PWM \u529f\u80fd\u4f86\u6e2c\u91cf PWM \u4fe1\u865f\u7684\u4f54\u7a7a\u6bd4:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#include "pico/stdlib.h"\n#include "hardware/pwm.h"\n#include "hardware/clocks.h"\n\nconst uint OUTPUT_PIN = 2;\nconst uint MEASURE_PIN = 5;\n\nfloat measure_duty_cycle(uint gpio) {\n    // \u53ea\u6709 PWM B \u5f15\u8173\u53ef\u4ee5\u7528\u4f5c\u8f38\u5165\n    assert(pwm_gpio_to_channel(gpio) == PWM_CHAN_B);\n\n    uint slice_num = pwm_gpio_to_slice_num(gpio);\n\n    // \u6bcf 100 \u500b\u5faa\u74b0,PWM B \u8f38\u5165\u70ba\u9ad8\u96fb\u5e73\u6642\u8a08\u6578\u4e00\u6b21\n    pwm_config cfg = pwm_get_default_config();\n    pwm_config_set_clkdiv_mode(&cfg, PWM_DIV_B_HIGH);\n    pwm_config_set_clkdiv(&cfg, 100);\n    pwm_init(slice_num, &cfg, false);\n\n    gpio_set_function(gpio, GPIO_FUNC_PWM);\n    pwm_set_enabled(slice_num, true);\n    sleep_ms(10);\n    pwm_set_enabled(slice_num, false);\n\n    float counting_rate = clock_get_hz(clk_sys) / 100;\n    float max_possible_count = counting_rate * 0.01;\n\n    return pwm_get_counter(slice_num) / max_possible_count;\n}\n\nconst float test_duty_cycles[] = {\n        0.f,\n        0.1f,\n        0.5f,\n        0.9f,\n        1.f\n};\n\nint main() {\n    stdio_init_all();\n    printf("\\nPWM duty cycle measurement example\\n");\n\n    // \u914d\u7f6e PWM \u5207\u7247\u4e26\u8a2d\u7f6e\u70ba\u904b\u884c\u72c0\u614b\n    const uint count_top = 1000;\n    pwm_config cfg = pwm_get_default_config();\n    pwm_config_set_wrap(&cfg, count_top);\n    pwm_init(pwm_gpio_to_slice_num(OUTPUT_PIN), &cfg, true);\n\n    // \u6ce8\u610f,\u6211\u5011\u9084\u6c92\u6709\u89f8\u78b0\u53e6\u4e00\u500b\u5f15\u8173 -- PWM \u5f15\u8173\u9810\u8a2d\u70ba\u8f38\u51fa,\n    // \u4f46\u4e00\u65e6\u5206\u983b\u5668\u6a21\u5f0f\u5f9e\u81ea\u7531\u904b\u884c\u6539\u8b8a,\u5c31\u6703\u8b8a\u70ba\u8f38\u5165\u3002\n    // \u5c07\u5169\u500b\u8f38\u51fa\u76f4\u63a5\u9023\u63a5\u5728\u4e00\u8d77\u662f\u4e0d\u660e\u667a\u7684!\n    gpio_set_function(OUTPUT_PIN, GPIO_FUNC_PWM);\n\n    // \u5c0d\u65bc\u6bcf\u500b\u6e2c\u8a66\u4f54\u7a7a\u6bd4,\u5728\u8f38\u51fa\u5f15\u8173\u4e0a\u9a45\u52d5\u8a72\u96fb\u5e73,\n    // \u7136\u5f8c\u4f7f\u7528\u53e6\u4e00\u500b\u5f15\u8173\u8b80\u56de\u5be6\u969b\u7684\u8f38\u51fa\u4f54\u7a7a\u6bd4\u3002\u9019\u5169\u500b\u503c\u61c9\u8a72\u975e\u5e38\u63a5\u8fd1!\n    for (int i = 0; i < count_of(test_duty_cycles); ++i) {\n        float output_duty_cycle = test_duty_cycles[i];\n        pwm_set_gpio_level(OUTPUT_PIN, (uint16_t)(output_duty_cycle * (count_top + 1)));\n\n        float measured_duty_cycle = measure_duty_cycle(MEASURE_PIN);\n        printf("Output duty cycle = %.1f%%, measured input duty cycle = %.1f%%\\n",\n               output_duty_cycle * 100.f, measured_duty_cycle * 100.f);\n    }\n}\n'})}),"\n",(0,l.jsx)(e.p,{children:"\u5728\u9019\u500b\u793a\u4f8b\u4e2d,\u6211\u5011\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 RP2040 \u7684 PWM \u529f\u80fd\u4f86\u6e2c\u91cf PWM \u4fe1\u865f\u7684\u4f54\u7a7a\u6bd4\u3002\u7a0b\u5e8f\u7684\u4e3b\u8981\u6b65\u9a5f\u5982\u4e0b:"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:["\u5b9a\u7fa9\u8f38\u51fa\u5f15\u8173 ",(0,l.jsx)(e.code,{children:"OUTPUT_PIN"})," \u548c\u6e2c\u91cf\u5f15\u8173 ",(0,l.jsx)(e.code,{children:"MEASURE_PIN"}),"\u3002"]}),"\n",(0,l.jsxs)(e.li,{children:["\u5be6\u73fe ",(0,l.jsx)(e.code,{children:"measure_duty_cycle()"})," \u51fd\u6578,\u7528\u65bc\u6e2c\u91cf\u7d66\u5b9a GPIO \u5f15\u8173\u4e0a\u7684 PWM \u4fe1\u865f\u4f54\u7a7a\u6bd4\u3002","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\u914d\u7f6e PWM \u5207\u7247,\u8a2d\u7f6e\u5206\u983b\u5668\u6a21\u5f0f\u70ba ",(0,l.jsx)(e.code,{children:"PWM_DIV_B_HIGH"}),",\u5373\u6bcf 100 \u500b\u5faa\u74b0\u8a08\u6578\u4e00\u6b21\u3002"]}),"\n",(0,l.jsx)(e.li,{children:"\u555f\u52d5 PWM,\u7b49\u5f85\u4e00\u6bb5\u6642\u9593,\u7136\u5f8c\u505c\u6b62 PWM\u3002"}),"\n",(0,l.jsx)(e.li,{children:"\u8a08\u7b97\u6700\u5927\u53ef\u80fd\u8a08\u6578\u503c,\u4e26\u6839\u64da\u5be6\u969b\u8a08\u6578\u503c\u8a08\u7b97\u4f54\u7a7a\u6bd4\u3002"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\u5728 ",(0,l.jsx)(e.code,{children:"main()"})," \u51fd\u6578\u4e2d,\u914d\u7f6e\u8f38\u51fa\u5f15\u8173\u7684 PWM \u5207\u7247,\u8a2d\u7f6e\u5305\u88f9\u503c\u70ba ",(0,l.jsx)(e.code,{children:"count_top"}),"\u3002"]}),"\n",(0,l.jsx)(e.li,{children:"\u5c0d\u65bc\u6bcf\u500b\u6e2c\u8a66\u4f54\u7a7a\u6bd4,\u5728\u8f38\u51fa\u5f15\u8173\u4e0a\u8a2d\u7f6e\u76f8\u61c9\u7684\u96fb\u5e73,\u7136\u5f8c\u4f7f\u7528\u6e2c\u91cf\u5f15\u8173\u8b80\u56de\u5be6\u969b\u7684\u8f38\u51fa\u4f54\u7a7a\u6bd4\u3002"}),"\n",(0,l.jsx)(e.li,{children:"\u5c07\u8f38\u51fa\u4f54\u7a7a\u6bd4\u548c\u6e2c\u91cf\u4f54\u7a7a\u6bd4\u6253\u5370\u51fa\u4f86,\u6aa2\u67e5\u5b83\u5011\u662f\u5426\u63a5\u8fd1\u3002"}),"\n"]}),"\n",(0,l.jsx)(e.admonition,{type:"caution",children:(0,l.jsx)(e.p,{children:"\u5728\u5c07\u5169\u500b\u5f15\u8173\u9023\u63a5\u5728\u4e00\u8d77\u4e4b\u524d,\u9700\u8981\u6ce8\u610f PWM \u5f15\u8173\u7684\u9ed8\u8a8d\u72c0\u614b\u3002PWM \u5f15\u8173\u9810\u8a2d\u70ba\u8f38\u51fa,\u4f46\u4e00\u65e6\u5206\u983b\u5668\u6a21\u5f0f\u5f9e\u81ea\u7531\u904b\u884c\u6539\u8b8a,\u5c31\u6703\u8b8a\u70ba\u8f38\u5165\u3002\u5c07\u5169\u500b\u8f38\u51fa\u76f4\u63a5\u9023\u63a5\u5728\u4e00\u8d77\u662f\u4e0d\u660e\u667a\u7684!"})}),"\n",(0,l.jsx)(e.p,{children:"\u901a\u904e\u9019\u500b\u793a\u4f8b,\u6211\u5011\u53ef\u4ee5\u770b\u5230\u5982\u4f55\u4f7f\u7528 RP2040 \u7684 PWM \u529f\u80fd\u4f86\u7cbe\u78ba\u6e2c\u91cf PWM \u4fe1\u865f\u7684\u4f54\u7a7a\u6bd4\u3002\u9019\u5728\u9700\u8981\u5c0d PWM \u4fe1\u865f\u9032\u884c\u5206\u6790\u548c\u63a7\u5236\u7684\u5834\u666f\u4e2d\u975e\u5e38\u6709\u7528\u3002"}),"\n",(0,l.jsx)(e.h2,{id:"\u55ae\u7368\u4f7f\u7528-pwm",children:"\u55ae\u7368\u4f7f\u7528 PWM"}),"\n",(0,l.jsx)(e.p,{children:"\u9664\u4e86\u4e0a\u8ff0\u793a\u4f8b\u4e2d\u7684\u7528\u6cd5,\u6211\u5011\u9084\u53ef\u4ee5\u55ae\u7368\u4f7f\u7528 PWM \u4f86\u63a7\u5236\u5404\u7a2e\u8a2d\u5099,\u5982\u76f4\u6d41\u96fb\u6a5f\u3001\u6b65\u9032\u96fb\u6a5f\u3001\u4f3a\u670d\u6a5f\u7b49\u3002\u4e0b\u9762\u6211\u5011\u5c07\u8a73\u7d30\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 PWM \u4f86\u63a7\u5236\u9019\u4e9b\u8a2d\u5099,\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 PWM \u4f5c\u70ba\u8f38\u5165\u6355\u7372\u4f86\u6aa2\u6e2c\u8f38\u5165\u4fe1\u865f\u7684\u983b\u7387\u3001\u8108\u5bec\u548c\u4f54\u7a7a\u6bd4\u3002"}),"\n",(0,l.jsx)(e.h3,{id:"\u63a7\u5236\u76f4\u6d41\u96fb\u6a5f",children:"\u63a7\u5236\u76f4\u6d41\u96fb\u6a5f"}),"\n",(0,l.jsx)(e.p,{children:"\u4f7f\u7528 PWM \u53ef\u4ee5\u65b9\u4fbf\u5730\u63a7\u5236\u76f4\u6d41\u96fb\u6a5f\u7684\u8f49\u901f\u3002\u901a\u904e\u6539\u8b8a PWM \u4fe1\u865f\u7684\u4f54\u7a7a\u6bd4,\u6211\u5011\u53ef\u4ee5\u8abf\u7bc0\u8f38\u51fa\u5230\u96fb\u6a5f\u7684\u5e73\u5747\u96fb\u58d3,\u5f9e\u800c\u63a7\u5236\u96fb\u6a5f\u7684\u8f49\u901f\u3002\u4ee5\u4e0b\u662f\u4e00\u500b\u4f7f\u7528 PWM \u63a7\u5236\u76f4\u6d41\u96fb\u6a5f\u7684\u793a\u4f8b:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:'#include "pico/stdlib.h"\n#include "hardware/pwm.h"\n\nconst uint MOTOR_PIN = 2;\n\nint main() {\n    // \u5c07\u96fb\u6a5f\u5f15\u8173\u8a2d\u7f6e\u70ba PWM \u529f\u80fd\n    gpio_set_function(MOTOR_PIN, GPIO_FUNC_PWM);\n\n    // \u7372\u53d6 PWM \u5207\u7247\u7de8\u865f\u548c\u901a\u9053\n    uint slice_num = pwm_gpio_to_slice_num(MOTOR_PIN);\n    uint channel = pwm_gpio_to_channel(MOTOR_PIN);\n\n    // \u914d\u7f6e PWM \u5207\u7247\n    pwm_config config = pwm_get_default_config();\n    pwm_config_set_wrap(&config, 65535);\n    pwm_init(slice_num, &config, true);\n\n    while (1) {\n        // \u8a2d\u7f6e\u4f54\u7a7a\u6bd4,\u63a7\u5236\u96fb\u6a5f\u8f49\u901f\n        pwm_set_chan_level(slice_num, channel, 32768); // 50% \u4f54\u7a7a\u6bd4\n        sleep_ms(2000);\n        pwm_set_chan_level(slice_num, channel, 16384); // 25% \u4f54\u7a7a\u6bd4\n        sleep_ms(2000);\n        pwm_set_chan_level(slice_num, channel, 49152); // 75% \u4f54\u7a7a\u6bd4\n        sleep_ms(2000);\n    }\n}\n'})}),"\n",(0,l.jsx)(e.p,{children:"\u5728\u9019\u500b\u793a\u4f8b\u4e2d,\u6211\u5011\u5c07\u96fb\u6a5f\u9023\u63a5\u5230 GPIO2 \u5f15\u8173,\u4e26\u5c07\u5176\u8a2d\u7f6e\u70ba PWM \u529f\u80fd\u3002\u7136\u5f8c,\u6211\u5011\u914d\u7f6e PWM \u5207\u7247,\u8a2d\u7f6e\u5305\u88f9\u503c\u70ba 65535,\u4ee5\u7372\u5f97\u66f4\u9ad8\u7684\u89e3\u6790\u5ea6\u3002\u5728\u4e3b\u8ff4\u5708\u4e2d,\u6211\u5011\u901a\u904e\u8a2d\u7f6e\u4e0d\u540c\u7684\u4f54\u7a7a\u6bd4\u4f86\u63a7\u5236\u96fb\u6a5f\u8f49\u901f\u3002\u4f54\u7a7a\u6bd4\u7684\u53d6\u503c\u7bc4\u570d\u70ba 0 \u5230 65535,\u5206\u5225\u5c0d\u61c9 0% \u5230 100% \u7684\u4f54\u7a7a\u6bd4\u3002"}),"\n",(0,l.jsx)(e.admonition,{type:"tip",children:(0,l.jsx)(e.p,{children:"\u6839\u64da\u96fb\u6a5f\u7684\u898f\u683c\u548c\u96fb\u6e90\u96fb\u58d3,\u4f60\u53ef\u80fd\u9700\u8981\u4f7f\u7528 H \u6a4b\u6216\u96fb\u6a5f\u9a45\u52d5\u5668\u4f86\u5b89\u5168\u5730\u9a45\u52d5\u96fb\u6a5f\u3002PWM \u4fe1\u865f\u53ef\u4ee5\u7528\u4f86\u63a7\u5236 H \u6a4b\u6216\u96fb\u6a5f\u9a45\u52d5\u5668\u7684\u8f38\u5165,\u5f9e\u800c\u8abf\u7bc0\u96fb\u6a5f\u8f49\u901f\u3002"})}),"\n",(0,l.jsx)(e.h3,{id:"\u63a7\u5236\u6b65\u9032\u96fb\u6a5f",children:"\u63a7\u5236\u6b65\u9032\u96fb\u6a5f"}),"\n",(0,l.jsx)(e.p,{children:"\u6b65\u9032\u96fb\u6a5f\u662f\u4e00\u7a2e\u5e38\u7528\u7684\u7cbe\u5bc6\u5b9a\u4f4d\u8a2d\u5099,\u53ef\u4ee5\u901a\u904e\u63a7\u5236\u8108\u885d\u4fe1\u865f\u4f86\u5be6\u73fe\u7cbe\u78ba\u7684\u89d2\u5ea6\u63a7\u5236\u3002\u4f7f\u7528 PWM,\u6211\u5011\u53ef\u4ee5\u751f\u6210\u63a7\u5236\u6b65\u9032\u96fb\u6a5f\u6240\u9700\u7684\u8108\u885d\u4fe1\u865f\u3002\u4ee5\u4e0b\u662f\u4e00\u500b\u4f7f\u7528 PWM \u63a7\u5236\u6b65\u9032\u96fb\u6a5f\u7684\u793a\u4f8b:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#include "pico/stdlib.h"\n#include "hardware/pwm.h"\n#include "hardware/irq.h"\n\n#include "stdlib.h"\n\n#define STEP_PIN 0\n#define DIR_PIN 1\n#define PWM_SLICE_NUM 0\n#define PULSES_PER_REV 1600  // \u6bcf\u5708\u8108\u885d\u6578\n#define PWM_FREQ (10000)      // PWM \u983b\u7387 (Hz) \n\nvolatile int32_t pulse_count = 0;\nvolatile int32_t target_pulses = 0;\nvolatile bool motor_running = false;\nvolatile float current_angle = 0.0f;\n\nvoid pwm_irq_handler() {\n    pwm_clear_irq(PWM_SLICE_NUM);\n    if (motor_running) {\n        pulse_count++;\n        if (pulse_count >= target_pulses) {\n            pwm_set_enabled(PWM_SLICE_NUM, false);\n            gpio_set_function(STEP_PIN, GPIO_FUNC_SIO);\n            gpio_set_dir(STEP_PIN, GPIO_OUT);\n            gpio_put(STEP_PIN, 0);  // \u78ba\u4fdd\u5f15\u8173\u70ba\u4f4e\u96fb\u5e73\n            motor_running = false;\n        }\n    }\n}\n\nvoid configure_pwm() {\n    gpio_set_function(STEP_PIN, GPIO_FUNC_PWM);\n    \n    pwm_config config = pwm_get_default_config();\n    \n    // \u8a08\u7b97\u5206\u983b\u5668\u503c\u548c\u5305\u7d61\u503c\n    uint32_t clock_freq = clock_get_hz(clk_sys);  // \u7372\u53d6\u7cfb\u7d71\u6642\u9418\u983b\u7387\n    uint32_t desired_freq = 1000;  // \u76ee\u6a19\u983b\u7387 1kHz\n    uint32_t divider = 1;\n    uint32_t wrap = clock_freq / (desired_freq * divider) - 1;\n\n    // \u8abf\u6574\u5206\u983b\u5668\u548c\u5305\u7d61\u503c\uff0c\u4ee5\u7372\u5f97\u6700\u63a5\u8fd1\u76ee\u6a19\u983b\u7387\u7684\u8a2d\u7f6e\n    while (wrap > 65535 && divider < 256) {\n        divider++;\n        wrap = clock_freq / (desired_freq * divider) - 1;\n    }\n\n    pwm_config_set_clkdiv_int(&config, divider);\n    pwm_config_set_wrap(&config, wrap);\n\n    // \u8a2d\u7f6e 50% \u5360\u7a7a\u6bd4\n    uint16_t level = (wrap + 1) / 2;\n    \n    pwm_init(PWM_SLICE_NUM, &config, false);\n    pwm_set_chan_level(PWM_SLICE_NUM, PWM_CHAN_A, level);\n    \n    pwm_clear_irq(PWM_SLICE_NUM);\n    pwm_set_irq_enabled(PWM_SLICE_NUM, true);\n    irq_set_exclusive_handler(PWM_IRQ_WRAP, pwm_irq_handler);\n    irq_set_enabled(PWM_IRQ_WRAP, true);\n}\n\n\nvoid rotate_motor(float angle) {\n    if (motor_running) return;  // \u5982\u679c\u96fb\u6a5f\u6b63\u5728\u904b\u8f49\uff0c\u5ffd\u7565\u65b0\u7684\u547d\u4ee4\n\n    bool direction = angle >= 0;\n    target_pulses = abs((int)(angle / 360.0f * PULSES_PER_REV));\n    pulse_count = 0;\n    motor_running = true;\n\n    gpio_put(DIR_PIN, direction);\n    gpio_set_function(STEP_PIN, GPIO_FUNC_PWM);\n    pwm_set_enabled(PWM_SLICE_NUM, true);\n\n    current_angle += angle;\n    while (current_angle >= 360.0f) current_angle -= 360.0f;\n    while (current_angle < 0.0f) current_angle += 360.0f;\n}\n\nint main() {\n    stdio_init_all();\n\n    gpio_init(DIR_PIN);\n    gpio_set_dir(DIR_PIN, GPIO_OUT);\n    configure_pwm();\n\n    // printf("Stepper Motor Control\\n");\n    // printf("Step Angle: 1.8 degrees, Microstepping: 8, Pulses per Revolution: 1600\\n");\n\n    while (true) {\n\n        rotate_motor(80);\n        sleep_ms(1000);\n        rotate_motor(-80);\n        sleep_ms(1000);\n    }\n\n    return 0;\n}\n\n'})}),"\n",(0,l.jsx)(e.p,{children:"\u5728\u9019\u500b\u793a\u4f8b\u4e2d,\u6211\u5011\u4f7f\u7528\u5169\u500b PWM \u901a\u9053\u4f86\u63a7\u5236\u6b65\u9032\u96fb\u6a5f\u3002\u4e00\u500b\u901a\u9053\u7528\u65bc\u751f\u6210\u6b65\u9032\u8108\u885d,\u53e6\u4e00\u500b\u901a\u9053\u7528\u65bc\u63a7\u5236\u6b65\u9032\u96fb\u6a5f\u7684\u65b9\u5411\u3002\u6211\u5011\u901a\u904e\u8a2d\u7f6e\u8108\u885d\u7684\u4f54\u7a7a\u6bd4\u548c\u983b\u7387\u4f86\u751f\u6210\u6240\u9700\u7684\u6b65\u9032\u8108\u885d,\u4e26\u901a\u904e\u6539\u8b8a\u65b9\u5411\u901a\u9053\u7684\u96fb\u5e73\u4f86\u63a7\u5236\u6b65\u9032\u96fb\u6a5f\u7684\u65cb\u8f49\u65b9\u5411\u3002"}),"\n",(0,l.jsx)(e.admonition,{type:"note",children:(0,l.jsx)(e.p,{children:"\u6b65\u9032\u96fb\u6a5f\u901a\u5e38\u9700\u8981\u8f03\u9ad8\u7684\u96fb\u6d41\u9a45\u52d5,\u56e0\u6b64\u5efa\u8b70\u4f7f\u7528\u5c08\u7528\u7684\u6b65\u9032\u96fb\u6a5f\u9a45\u52d5\u5668\u4f86\u63a7\u5236\u6b65\u9032\u96fb\u6a5f\u3002PWM \u4fe1\u865f\u53ef\u4ee5\u4f5c\u70ba\u6b65\u9032\u96fb\u6a5f\u9a45\u52d5\u5668\u7684\u8f38\u5165,\u7528\u65bc\u63a7\u5236\u6b65\u9032\u8108\u885d\u548c\u65b9\u5411\u3002"})}),"\n",(0,l.jsxs)(e.admonition,{type:"note",children:[(0,l.jsx)(e.p,{children:"\u751f\u6210\u6b65\u9032\u8108\u885d\u7684\u904e\u7a0b\u53ef\u4ee5\u5206\u70ba\u4ee5\u4e0b\u5e7e\u500b\u6b65\u9a5f:"}),(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"\u8a2d\u7f6e\u6b65\u9032\u5f15\u8173\u7684 PWM \u8f38\u51fa\u96fb\u5e73\u70ba\u9ad8\u96fb\u5e73\uff0850% \u4f54\u7a7a\u6bd4\uff09\u3002"}),"\n",(0,l.jsx)(e.li,{children:"\u5ef6\u9072\u4e00\u6bb5\u6642\u9593\uff08\u8108\u885d\u7684\u9ad8\u96fb\u5e73\u6301\u7e8c\u6642\u9593\uff09\u3002"}),"\n",(0,l.jsx)(e.li,{children:"\u8a2d\u7f6e\u6b65\u9032\u5f15\u8173\u7684 PWM \u8f38\u51fa\u96fb\u5e73\u70ba\u4f4e\u96fb\u5e73\u3002"}),"\n",(0,l.jsx)(e.li,{children:"\u5ef6\u9072\u4e00\u6bb5\u6642\u9593\uff08\u8108\u885d\u7684\u4f4e\u96fb\u5e73\u6301\u7e8c\u6642\u9593\uff09\u3002"}),"\n",(0,l.jsx)(e.li,{children:"\u91cd\u8907\u6b65\u9a5f 1-4,\u76f4\u5230\u751f\u6210\u8db3\u5920\u6578\u91cf\u7684\u6b65\u9032\u8108\u885d\u3002"}),"\n"]})]}),"\n",(0,l.jsx)(e.h5,{id:"\u6539\u8b8a\u6b65\u9032\u96fb\u6a5f\u65cb\u8f49\u65b9\u5411",children:"\u6539\u8b8a\u6b65\u9032\u96fb\u6a5f\u65cb\u8f49\u65b9\u5411"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:"pwm_set_chan_level(slice_num_dir, channel_dir, 65535);\n"})}),"\n",(0,l.jsx)(e.p,{children:"\u751f\u6210\u5b8c 200 \u500b\u6b65\u9032\u8108\u885d\u5f8c,\u6211\u5011\u5ef6\u9072 1 \u79d2\u9418,\u7136\u5f8c\u5c07\u65b9\u5411\u5f15\u8173\u7684 PWM \u8f38\u51fa\u96fb\u5e73\u8a2d\u7f6e\u70ba 65535,\u8868\u793a\u6b65\u9032\u96fb\u6a5f\u7684\u53cd\u5411\u65cb\u8f49\u3002"}),"\n",(0,l.jsx)(e.p,{children:"\u63a5\u4e0b\u4f86,\u6211\u5011\u518d\u6b21\u751f\u6210 200 \u500b\u6b65\u9032\u8108\u885d,\u4f46\u9019\u6b21\u6b65\u9032\u96fb\u6a5f\u5c07\u5411\u76f8\u53cd\u65b9\u5411\u65cb\u8f49\u3002\u6700\u5f8c,\u6211\u5011\u518d\u6b21\u5ef6\u9072 1 \u79d2\u9418,\u7136\u5f8c\u91cd\u8907\u6574\u500b\u904e\u7a0b\u3002"}),"\n",(0,l.jsx)(e.h5,{id:"\u7a0b\u5f0f\u78bc\u4e2d\u7684\u6578\u5b57\u53c3\u6578",children:"\u7a0b\u5f0f\u78bc\u4e2d\u7684\u6578\u5b57\u53c3\u6578"}),"\n",(0,l.jsxs)(e.admonition,{type:"note",children:[(0,l.jsx)(e.p,{children:"\u9019\u6bb5\u7a0b\u5f0f\u78bc\u4e2d\u7684\u6578\u5b57\u53c3\u6578\u7684\u542b\u7fa9\u5982\u4e0b:"}),(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"32768"}),": \u8868\u793a 50% \u7684 PWM \u4f54\u7a7a\u6bd4\u3002\u56e0\u70ba\u6211\u5011\u5c07 PWM \u8a08\u6578\u5668\u7684\u6700\u5927\u503c\u8a2d\u7f6e\u70ba 65535,\u6240\u4ee5 32768 \u5927\u7d04\u662f\u6700\u5927\u503c\u7684\u4e00\u534a,\u5c0d\u61c9 50% \u7684\u4f54\u7a7a\u6bd4\u3002"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"500"}),": \u8868\u793a\u6b65\u9032\u8108\u885d\u7684\u9ad8\u96fb\u5e73\u548c\u4f4e\u96fb\u5e73\u6301\u7e8c\u6642\u9593,\u55ae\u4f4d\u70ba\u5fae\u79d2\u3002\u9019\u500b\u503c\u6c7a\u5b9a\u4e86\u6b65\u9032\u96fb\u6a5f\u7684\u901f\u5ea6\u3002\u589e\u5927\u9019\u500b\u503c\u6703\u964d\u4f4e\u6b65\u9032\u96fb\u6a5f\u7684\u901f\u5ea6,\u6e1b\u5c0f\u9019\u500b\u503c\u6703\u63d0\u9ad8\u6b65\u9032\u96fb\u6a5f\u7684\u901f\u5ea6\u3002"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"200"}),": \u8868\u793a\u751f\u6210\u7684\u6b65\u9032\u8108\u885d\u6578\u91cf\u3002\u9019\u500b\u503c\u6c7a\u5b9a\u4e86\u6b65\u9032\u96fb\u6a5f\u65cb\u8f49\u7684\u89d2\u5ea6\u3002\u589e\u5927\u9019\u500b\u503c\u6703\u589e\u52a0\u6b65\u9032\u96fb\u6a5f\u65cb\u8f49\u7684\u89d2\u5ea6,\u6e1b\u5c0f\u9019\u500b\u503c\u6703\u6e1b\u5c0f\u6b65\u9032\u96fb\u6a5f\u65cb\u8f49\u7684\u89d2\u5ea6\u3002"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"65535"}),": \u8868\u793a PWM \u8a08\u6578\u5668\u7684\u6700\u5927\u503c,\u4e5f\u8868\u793a 100% \u7684 PWM \u4f54\u7a7a\u6bd4\u3002\u7576\u65b9\u5411\u5f15\u8173\u7684 PWM \u8f38\u51fa\u96fb\u5e73\u8a2d\u7f6e\u70ba 65535 \u6642,\u8868\u793a\u6b65\u9032\u96fb\u6a5f\u7684\u53cd\u5411\u65cb\u8f49\u3002"]}),"\n"]})]}),"\n",(0,l.jsx)(e.h5,{id:"\u5176\u4ed6-pwm-\u914d\u7f6e",children:"\u5176\u4ed6 PWM \u914d\u7f6e"}),"\n",(0,l.jsx)(e.p,{children:"\u9664\u4e86\u4e0a\u8ff0\u53c3\u6578,\u6211\u5011\u9084\u53ef\u4ee5\u8a2d\u7f6e\u5176\u4ed6\u7684 PWM \u914d\u7f6e,\u4f8b\u5982:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"pwm_config_set_clkdiv"}),": \u8a2d\u7f6e PWM \u6642\u9418\u5206\u983b\u5668,\u53ef\u4ee5\u6539\u8b8a PWM \u7684\u983b\u7387\u3002\u589e\u5927\u5206\u983b\u503c\u6703\u964d\u4f4e PWM \u983b\u7387,\u6e1b\u5c0f\u5206\u983b\u503c\u6703\u63d0\u9ad8 PWM \u983b\u7387\u3002"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"pwm_config_set_phase_correct"}),": \u8a2d\u7f6e\u662f\u5426\u4f7f\u7528\u76f8\u4f4d\u6821\u6b63\u6a21\u5f0f\u3002\u5728\u76f8\u4f4d\u6821\u6b63\u6a21\u5f0f\u4e0b,PWM \u8a08\u6578\u5668\u5728\u9054\u5230\u6700\u5927\u503c\u5f8c\u6703\u5411\u4e0b\u8a08\u6578,\u800c\u4e0d\u662f\u76f4\u63a5\u91cd\u7f6e\u70ba 0\u3002\u9019\u53ef\u4ee5\u6e1b\u5c11 PWM \u8f38\u51fa\u7684\u5c16\u5cf0\u566a\u8072\u3002"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"pwm_config_set_output_polarity"}),": \u8a2d\u7f6e PWM \u8f38\u51fa\u7684\u6975\u6027\u3002\u53ef\u4ee5\u9078\u64c7\u5728 PWM \u8a08\u6578\u5668\u9054\u5230\u6bd4\u8f03\u503c\u6642\u8f38\u51fa\u9ad8\u96fb\u5e73\u9084\u662f\u4f4e\u96fb\u5e73\u3002"]}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"\u8abf\u6574\u9019\u4e9b PWM \u914d\u7f6e\u53ef\u4ee5\u6539\u8b8a PWM \u8f38\u51fa\u7684\u7279\u6027,\u5f9e\u800c\u5f71\u97ff\u6b65\u9032\u96fb\u6a5f\u7684\u904b\u884c\u65b9\u5f0f,\u5982\u901f\u5ea6\u3001\u626d\u77e9\u3001\u566a\u8072\u7b49\u3002"}),"\n",(0,l.jsx)(e.admonition,{type:"caution",children:(0,l.jsx)(e.p,{children:"\u9700\u8981\u6ce8\u610f\u7684\u662f,\u9019\u6bb5\u7a0b\u5f0f\u78bc\u53ea\u662f\u4e00\u500b\u57fa\u672c\u7684\u793a\u4f8b,\u7528\u65bc\u6f14\u793a\u5982\u4f55\u4f7f\u7528 PWM \u63a7\u5236\u6b65\u9032\u96fb\u6a5f\u3002\u5728\u5be6\u969b\u61c9\u7528\u4e2d,\u4f60\u53ef\u80fd\u9700\u8981\u6839\u64da\u5177\u9ad4\u7684\u6b65\u9032\u96fb\u6a5f\u578b\u865f\u548c\u9a45\u52d5\u5668\u4f86\u8abf\u6574\u53c3\u6578\u548c\u8a2d\u7f6e,\u4ee5\u7372\u5f97\u6700\u4f73\u7684\u6027\u80fd\u548c\u53ef\u9760\u6027\u3002\u6b64\u5916,\u6b65\u9032\u96fb\u6a5f\u901a\u5e38\u9700\u8981\u8f03\u5927\u7684\u96fb\u6d41,\u56e0\u6b64\u5efa\u8b70\u4f7f\u7528\u5c08\u7528\u7684\u6b65\u9032\u96fb\u6a5f\u9a45\u52d5\u5668,\u800c\u4e0d\u662f\u76f4\u63a5\u901a\u904e PWM \u5f15\u8173\u9a45\u52d5\u3002"})}),"\n",(0,l.jsx)(e.h3,{id:"\u63a7\u5236\u4f3a\u670d\u6a5f",children:"\u63a7\u5236\u4f3a\u670d\u6a5f"}),"\n",(0,l.jsx)(e.p,{children:"\u4f3a\u670d\u6a5f\u662f\u4e00\u7a2e\u5e38\u7528\u7684\u4f4d\u7f6e\u63a7\u5236\u8a2d\u5099,\u901a\u904e\u6539\u8b8a PWM \u4fe1\u865f\u7684\u8108\u5bec\u4f86\u63a7\u5236\u4f3a\u670d\u6a5f\u7684\u89d2\u5ea6\u3002\u4ee5\u4e0b\u662f\u4e00\u500b\u4f7f\u7528 PWM \u63a7\u5236\u4f3a\u670d\u6a5f\u7684\u793a\u4f8b:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:'#include "pico/stdlib.h"\n#include "hardware/pwm.h"\n\nconst uint SERVO_PIN = 2;\n\nint main() {\n    // \u5c07\u4f3a\u670d\u6a5f\u5f15\u8173\u8a2d\u7f6e\u70ba PWM \u529f\u80fd\n    gpio_set_function(SERVO_PIN, GPIO_FUNC_PWM);\n\n    // \u7372\u53d6 PWM \u5207\u7247\u7de8\u865f\u548c\u901a\u9053\n    uint slice_num = pwm_gpio_to_slice_num(SERVO_PIN);\n    uint channel = pwm_gpio_to_channel(SERVO_PIN);\n\n    // \u914d\u7f6e PWM \u5207\u7247\n    pwm_config config = pwm_get_default_config();\n    pwm_config_set_wrap(&config, 19999);\n    pwm_config_set_clkdiv(&config, 9.6f);\n    pwm_init(slice_num, &config, true);\n\n    while (1) {\n        // \u8a2d\u7f6e\u8108\u5bec,\u63a7\u5236\u4f3a\u670d\u6a5f\u89d2\u5ea6\n        pwm_set_chan_level(slice_num, channel, 1000); // 0 \u5ea6\n        sleep_ms(2000);\n        pwm_set_chan_level(slice_num, channel, 1500); // 90 \u5ea6\n        sleep_ms(2000);\n        pwm_set_chan_level(slice_num, channel, 2000); // 180 \u5ea6\n        sleep_ms(2000);\n    }\n}\n'})}),"\n",(0,l.jsx)(e.p,{children:"\u5728\u9019\u500b\u793a\u4f8b\u4e2d,\u6211\u5011\u5c07\u4f3a\u670d\u6a5f\u9023\u63a5\u5230 GPIO2 \u5f15\u8173,\u4e26\u5c07\u5176\u8a2d\u7f6e\u70ba PWM \u529f\u80fd\u3002\u6211\u5011\u914d\u7f6e PWM \u5207\u7247,\u8a2d\u7f6e\u5305\u88f9\u503c\u70ba 19999,\u6642\u9418\u5206\u983b\u5668\u70ba 9.6,\u4ee5\u7372\u5f97 50Hz \u7684 PWM \u983b\u7387\u3002\u5728\u4e3b\u8ff4\u5708\u4e2d,\u6211\u5011\u901a\u904e\u8a2d\u7f6e\u4e0d\u540c\u7684\u8108\u5bec\u4f86\u63a7\u5236\u4f3a\u670d\u6a5f\u7684\u89d2\u5ea6\u3002\u8108\u5bec\u7684\u5178\u578b\u503c\u70ba 1000us\uff080 \u5ea6\uff09\u30011500us\uff0890 \u5ea6\uff09\u548c 2000us\uff08180 \u5ea6\uff09,\u4f46\u5177\u9ad4\u503c\u53ef\u80fd\u56e0\u4f3a\u670d\u6a5f\u578b\u865f\u800c\u6709\u6240\u4e0d\u540c\u3002"}),"\n",(0,l.jsx)(e.admonition,{type:"caution",children:(0,l.jsx)(e.p,{children:"\u4f3a\u670d\u6a5f\u7684\u63a7\u5236\u4fe1\u865f\u9700\u8981\u7cbe\u78ba\u7684\u8108\u5bec\u548c\u983b\u7387,\u56e0\u6b64\u5728\u914d\u7f6e PWM \u6642\u9700\u8981\u4ed4\u7d30\u8a08\u7b97\u5305\u88f9\u503c\u548c\u6642\u9418\u5206\u983b\u5668,\u4ee5\u7372\u5f97\u6240\u9700\u7684\u8108\u5bec\u548c\u983b\u7387\u3002\u6b64\u5916,\u4f3a\u670d\u6a5f\u901a\u5e38\u9700\u8981\u55ae\u7368\u7684\u96fb\u6e90\u4f9b\u96fb,\u4ee5\u63d0\u4f9b\u8db3\u5920\u7684\u96fb\u6d41\u3002"})}),"\n",(0,l.jsx)(e.h3,{id:"\u4f7f\u7528-pwm-\u4f5c\u70ba\u8f38\u5165\u6355\u7372",children:"\u4f7f\u7528 PWM \u4f5c\u70ba\u8f38\u5165\u6355\u7372"}),"\n",(0,l.jsx)(e.p,{children:"\u9664\u4e86\u7528\u65bc\u8f38\u51fa\u63a7\u5236\u4fe1\u865f,PWM \u9084\u53ef\u4ee5\u4f5c\u70ba\u8f38\u5165\u6355\u7372\u4f86\u6aa2\u6e2c\u8f38\u5165\u4fe1\u865f\u7684\u983b\u7387\u3001\u8108\u5bec\u548c\u4f54\u7a7a\u6bd4\u3002\u4ee5\u4e0b\u662f\u4e00\u500b\u4f7f\u7528 PWM \u4f5c\u70ba\u8f38\u5165\u6355\u7372\u7684\u793a\u4f8b:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#include "pico/stdlib.h"\n#include "hardware/pwm.h"\n#include "hardware/clocks.h"\n\nconst uint INPUT_PIN = 2;\n\nint main() {\n    // \u5c07\u8f38\u5165\u5f15\u8173\u8a2d\u7f6e\u70ba PWM \u529f\u80fd\n    gpio_set_function(INPUT_PIN, GPIO_FUNC_PWM);\n\n    // \u7372\u53d6 PWM \u5207\u7247\u7de8\u865f\n    uint slice_num = pwm_gpio_to_slice_num(INPUT_PIN);\n\n    // \u914d\u7f6e PWM \u5207\u7247\u4f5c\u70ba\u8f38\u5165\u6355\u7372\u6a21\u5f0f\n    pwm_config config = pwm_get_default_config();\n    pwm_config_set_clkdiv_mode(&config, PWM_DIV_B_RISING);\n    pwm_init(slice_num, &config, false);\n    \n    // \u4f7f\u80fd\u8f38\u5165\u6355\u7372\n    pwm_set_enabled(slice_num, true);\n\n    while (1) {\n        // \u7b49\u5f85\u8f38\u5165\u4fe1\u865f\n        while (!(pwm_get_status(slice_num) & PWM_CH0_CSR_RCIF_BITS));\n\n        // \u8b80\u53d6\u8f38\u5165\u4fe1\u865f\u7684\u983b\u7387\u3001\u8108\u5bec\u548c\u4f54\u7a7a\u6bd4\n        uint32_t period = pwm_get_counter(slice_num);\n        uint32_t pulse_width = pwm_get_compare_counter(slice_num, 0);\n        float frequency = clock_get_hz(clk_sys) / period;\n        float duty_cycle = (float)pulse_width / period;\n\n        printf("Frequency: %.2f Hz, Pulse Width: %u us, Duty Cycle: %.2f%%\\n", \n               frequency, pulse_width, duty_cycle * 100);\n\n        // \u6e05\u9664\u8f38\u5165\u6355\u7372\u4e2d\u65b7\u6a19\u8a8c\n        pwm_clear_irq(slice_num);\n    }\n}\n'})}),"\n",(0,l.jsx)(e.p,{children:"\u5728\u9019\u500b\u793a\u4f8b\u4e2d,\u6211\u5011\u5c07\u8f38\u5165\u4fe1\u865f\u9023\u63a5\u5230 GPIO2 \u5f15\u8173,\u4e26\u5c07\u5176\u8a2d\u7f6e\u70ba PWM \u529f\u80fd\u3002\u6211\u5011\u914d\u7f6e PWM \u5207\u7247\u4f5c\u70ba\u8f38\u5165\u6355\u7372\u6a21\u5f0f,\u4e26\u4f7f\u80fd\u8f38\u5165\u6355\u7372\u3002\u5728\u4e3b\u8ff4\u5708\u4e2d,\u6211\u5011\u7b49\u5f85\u8f38\u5165\u4fe1\u865f\u89f8\u767c\u8f38\u5165\u6355\u7372\u4e2d\u65b7,\u7136\u5f8c\u8b80\u53d6\u8f38\u5165\u4fe1\u865f\u7684\u983b\u7387\u3001\u8108\u5bec\u548c\u4f54\u7a7a\u6bd4\u3002\u983b\u7387\u53ef\u4ee5\u901a\u904e\u6642\u9418\u983b\u7387\u9664\u4ee5\u9031\u671f\u8a08\u6578\u5668\u503c\u4f86\u8a08\u7b97,\u8108\u5bec\u53ef\u4ee5\u76f4\u63a5\u5f9e\u6355\u7372\u6bd4\u8f03\u8a08\u6578\u5668\u4e2d\u8b80\u53d6,\u4f54\u7a7a\u6bd4\u53ef\u4ee5\u901a\u904e\u8108\u5bec\u9664\u4ee5\u9031\u671f\u4f86\u8a08\u7b97\u3002"}),"\n",(0,l.jsx)(e.admonition,{type:"note",children:(0,l.jsx)(e.p,{children:"\u8f38\u5165\u6355\u7372\u6a21\u5f0f\u4e0b,PWM \u5207\u7247\u6703\u5728\u8f38\u5165\u4fe1\u865f\u7684\u4e0a\u5347\u6cbf\u6216\u4e0b\u964d\u6cbf\u89f8\u767c\u8f38\u5165\u6355\u7372\u4e2d\u65b7,\u4e26\u8a18\u9304\u7576\u524d\u7684\u8a08\u6578\u5668\u503c\u3002\u901a\u904e\u6bd4\u8f03\u9023\u7e8c\u5169\u6b21\u6355\u7372\u7684\u8a08\u6578\u5668\u503c,\u53ef\u4ee5\u8a08\u7b97\u51fa\u8f38\u5165\u4fe1\u865f\u7684\u983b\u7387\u3001\u8108\u5bec\u548c\u4f54\u7a7a\u6bd4\u3002"})}),"\n",(0,l.jsx)(e.h2,{id:"\u7e3d\u7d50",children:"\u7e3d\u7d50"}),"\n",(0,l.jsx)(e.p,{children:"\u5728\u672c\u6587\u4e2d,\u6211\u5011\u8a73\u7d30\u63a2\u8a0e\u4e86\u5982\u4f55\u5728 RP2040 \u4e2d\u4f7f\u7528 PWM \u529f\u80fd\u3002\u9664\u4e86\u4e4b\u524d\u4ecb\u7d39\u7684\u57fa\u672c\u7528\u6cd5,\u6211\u5011\u9084\u6df1\u5165\u8b1b\u89e3\u4e86\u5982\u4f55\u4f7f\u7528 PWM \u63a7\u5236\u76f4\u6d41\u96fb\u6a5f\u3001\u6b65\u9032\u96fb\u6a5f\u548c\u4f3a\u670d\u6a5f,\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528 PWM \u4f5c\u70ba\u8f38\u5165\u6355\u7372\u4f86\u6aa2\u6e2c\u8f38\u5165\u4fe1\u865f\u7684\u983b\u7387\u3001\u8108\u5bec\u548c\u4f54\u7a7a\u6bd4\u3002"}),"\n",(0,l.jsx)(e.p,{children:"\u901a\u904e\u5b78\u7fd2\u672c\u6587\u63d0\u4f9b\u7684\u8a73\u7d30\u89e3\u91cb\u548c\u793a\u4f8b\u4ee3\u78bc,\u4f60\u61c9\u8a72\u80fd\u5920\u638c\u63e1 RP2040 \u4e2d PWM \u7684\u5404\u7a2e\u7528\u6cd5,\u4e26\u5c07\u5176\u61c9\u7528\u5230\u81ea\u5df1\u7684\u5d4c\u5165\u5f0f\u9805\u76ee\u4e2d\u3002\u7121\u8ad6\u662f\u96fb\u6a5f\u63a7\u5236\u3001\u4f3a\u670d\u6a5f\u63a7\u5236\u9084\u662f\u4fe1\u865f\u6aa2\u6e2c,PWM \u90fd\u662f\u4e00\u500b\u5f37\u5927\u800c\u9748\u6d3b\u7684\u5de5\u5177\u3002"}),"\n",(0,l.jsx)(e.p,{children:"\u5e0c\u671b\u672c\u6587\u80fd\u5920\u5e6b\u52a9\u4f60\u66f4\u597d\u5730\u7406\u89e3\u548c\u61c9\u7528 RP2040 \u4e2d\u7684 PWM \u529f\u80fd\u3002\u5982\u679c\u4f60\u6709\u4efb\u4f55\u554f\u984c\u6216\u5efa\u8b70,\u6b61\u8fce\u5728\u8a55\u8ad6\u5340\u7559\u8a00\u8a0e\u8ad6\u3002"})]})}function p(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(o,{...n})}):o(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>s});var l=i(6540);const c={},_=l.createContext(c);function t(n){const e=l.useContext(_);return l.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:t(n.components),l.createElement(_.Provider,{value:e},n.children)}}}]);