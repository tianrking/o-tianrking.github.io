<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps on WoW</title>
    <link>https://me.w0x7ce.eu/categories/devops/</link>
    <description>Recent content in DevOps on WoW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>w0x7ce</copyright>
    <lastBuildDate>Wed, 27 Apr 2022 20:24:38 +0800</lastBuildDate><atom:link href="https://me.w0x7ce.eu/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Heroku_Selenium_</title>
      <link>https://me.w0x7ce.eu/post/heroku_selenium/</link>
      <pubDate>Wed, 27 Apr 2022 20:24:38 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/heroku_selenium/</guid>
      <description>Step 1: Set Up Your Code from selenium import webdriver import os chrome_options = webdriver.ChromeOptions() chrome_options.binary_location = os.environ.get(&amp;quot;GOOGLE_CHROME_BIN&amp;quot;) chrome_options.add_argument(&amp;quot;--headless&amp;quot;) chrome_options.add_argument(&amp;quot;--disable-dev-shm-usage&amp;quot;) chrome_options.add_argument(&amp;quot;--no-sandbox&amp;quot;) driver = webdriver.Chrome(executable_path=os.environ.get(&amp;quot;CHROMEDRIVER_PATH&amp;quot;), chrome_options=chrome_options)  Step 2: Add the Buildpacks On Heroku, open your App. Click on the Settings tab and scroll down to Buildpacks. Add the following:
Python (Select it from the officially supported buildpacks) Headless Google Chrome: https://github.com/heroku/heroku-buildpack-google-chrome Chromedriver: https://github.com/heroku/heroku-buildpack-chromedriver  Step 3: Add the Config Vars Scroll to the config vars section.</description>
    </item>
    
    <item>
      <title>Python_Gmail</title>
      <link>https://me.w0x7ce.eu/post/python_gmail/</link>
      <pubDate>Wed, 27 Apr 2022 16:24:12 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/python_gmail/</guid>
      <description>準備 啓用兩步驗證 創建程式密碼 授權外部訪問 Google Account。 發送電子郵件 發送文本電子郵件 import smtplib from email.mime.multipart import MIMEMultipart from email.mime.text import MIMEText username = &amp;quot;@gmail.com&amp;quot; password = &amp;quot;password&amp;quot; mail_from = &amp;quot;@gmail.com&amp;quot; mail_to = &amp;quot;@gmail.com&amp;quot; mail_subject = &amp;quot;Test Subject&amp;quot; mail_body</description>
    </item>
    
    <item>
      <title>Heroku_flask_搭建與使用</title>
      <link>https://me.w0x7ce.eu/post/heroku_flask_%E6%90%AD%E5%BB%BA%E8%88%87%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 25 Apr 2022 16:02:03 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/heroku_flask_%E6%90%AD%E5%BB%BA%E8%88%87%E4%BD%BF%E7%94%A8/</guid>
      <description>Install heroku CLI sudo snap install heroku --classic setup account heroku login Create app heroku create Create a new Git repository cd my-project/ git init heroku git:remote -a name Existing Git repository heroku git:remote -a name FLASK DEMO app.py from flask import Flask app = Flask(__name__) @app.route(&amp;quot;/who&amp;quot;) def who_am_i(): return &amp;quot;w0x7ce&amp;quot; if __name__ == &#39;__main__&#39;: app.run(port=5000) wsgi.py from app import app if __name__ == &amp;quot;__main__&amp;quot;: app.run() Procfile web: gunicorn wsgi:app</description>
    </item>
    
    <item>
      <title>GCP Python_Flask搭建与使用</title>
      <link>https://me.w0x7ce.eu/post/gcp-python_flask%E6%90%AD%E5%BB%BA%E8%88%87%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 24 Apr 2022 09:20:10 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/gcp-python_flask%E6%90%AD%E5%BB%BA%E8%88%87%E4%BD%BF%E7%94%A8/</guid>
      <description>GCP Python 文檔 官方資料 Demo Installing the gcloud CLI Download #x86_64 curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-382.0.0-linux-x86_64.tar.gz #arm64 curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-382.0.0-linux-arm.tar.gz #x86 curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-382.0.0-linux-x86.tar.gz tar -xf google-cloud-*.tar.gz ./google-cloud-sdk/install.sh Initialize the gcloud CLI Run gcloud init: gcloud init If you are in a remote terminal session, you can use the &amp;ndash;console-only flag to prevent the command from launching a browser-based authorization flow, if required: gcloud init --console-only Demo Deploy</description>
    </item>
    
    <item>
      <title>Tor</title>
      <link>https://me.w0x7ce.eu/post/tor/</link>
      <pubDate>Tue, 15 Mar 2022 13:43:49 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/tor/</guid>
      <description>https://www.torproject.org/docs/faq#torrc 通用部分 Tor opens a SOCKS proxy on port 9050 by default &amp;ndash; even if you don&amp;rsquo;t configure one below. Set &amp;ldquo;SOCKSPort 0&amp;rdquo; if you plan to run Tor only as a relay, and not make any local application connections yourself. SOCKSPort 9050 # Default: Bind to localhost:9050 for local connections. SOCKSPort 192.168.0.1:9100 # Bind to this address:port too. Entry policies to allow/deny SOCKS requests based on</description>
    </item>
    
    <item>
      <title>Ab压力测试</title>
      <link>https://me.w0x7ce.eu/post/ab%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Tue, 15 Mar 2022 08:44:16 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/ab%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/</guid>
      <description>ab install sudo apt-get install apache2-utils ab 参数 -A auth-username:password 为服务器提供BASIC身份验证凭据。用户名和密码由一个单独分隔，:并通过wire base64编码发送。无论服务器是否需</description>
    </item>
    
    <item>
      <title>Golang学习(一)</title>
      <link>https://me.w0x7ce.eu/post/golang%E5%AD%A6%E4%B9%A0%E4%B8%80/</link>
      <pubDate>Mon, 14 Mar 2022 21:48:05 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/golang%E5%AD%A6%E4%B9%A0%E4%B8%80/</guid>
      <description>学习项目 https://github.com/xinliangnote/go-gin-api https://github.com/eddycjy/go-gin-example https://github.com/songtianyi/wechat-go https://github.com/gin-gonic/gin https://github.com/go-gorm/gorm 在线工具 JSON to Go struct 网站链接： https://mholt.github.io/json-to-go/ YAML to Go struct 网站链接： https://zhwt.github.io/yaml-to-go/ plantUML 网站链接： https://www.dumels.com/ Rego 网站链接： https://regoio.herokuapp.com/</description>
    </item>
    
    <item>
      <title>K8s安裝與配置</title>
      <link>https://me.w0x7ce.eu/post/k8s%E5%AE%89%E8%A3%9D%E8%88%87%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 04 Mar 2022 10:37:09 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/k8s%E5%AE%89%E8%A3%9D%E8%88%87%E9%85%8D%E7%BD%AE/</guid>
      <description>主要内容 kubeadm Minikube 安装 kubeadm 准备开始 一台兼容的 Linux 主机。Kubernetes 项目为基于 Debian 和 Red Hat 的 Linux 发行版以及一些不提供包管理器的发行版提供通用的指令 每台</description>
    </item>
    
  </channel>
</rss>
