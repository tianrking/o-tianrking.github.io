<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on WoW</title>
    <link>https://me.w0x7ce.eu/post/</link>
    <description>Recent content in Posts on WoW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>w0x7ce</copyright>
    <lastBuildDate>Mon, 14 Mar 2022 21:48:05 +0800</lastBuildDate><atom:link href="https://me.w0x7ce.eu/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang学习(一)</title>
      <link>https://me.w0x7ce.eu/post/golang%E5%AD%A6%E4%B9%A0%E4%B8%80/</link>
      <pubDate>Mon, 14 Mar 2022 21:48:05 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/golang%E5%AD%A6%E4%B9%A0%E4%B8%80/</guid>
      <description>学习项目 https://github.com/xinliangnote/go-gin-api https://github.com/eddycjy/go-gin-example https://github.com/songtianyi/wechat-go https://github.com/gin-gonic/gin https://github.com/go-gorm/gorm 在线工具 JSON to Go struct 网站链接： mholt.github.io/json-to-go/ YAML to Go struct 网站链接： zhwt.github.io/yaml-to-go/ Table to Go struct 网站链接： github.com/gohouse/con… plantUML 网站链接</description>
    </item>
    
    <item>
      <title>Python杂记</title>
      <link>https://me.w0x7ce.eu/post/python%E6%9D%82%E8%AE%B0/</link>
      <pubDate>Sun, 13 Mar 2022 22:11:35 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/python%E6%9D%82%E8%AE%B0/</guid>
      <description></description>
    </item>
    
    <item>
      <title>K8s安裝與配置</title>
      <link>https://me.w0x7ce.eu/post/k8s%E5%AE%89%E8%A3%9D%E8%88%87%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 04 Mar 2022 10:37:09 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/k8s%E5%AE%89%E8%A3%9D%E8%88%87%E9%85%8D%E7%BD%AE/</guid>
      <description>主要内容 kubeadm Minikube 安装 kubeadm 准备开始 一台兼容的 Linux 主机。Kubernetes 项目为基于 Debian 和 Red Hat 的 Linux 发行版以及一些不提供包管理器的发行版提供通用的指令 每台</description>
    </item>
    
    <item>
      <title>Opensearch使用</title>
      <link>https://me.w0x7ce.eu/post/opensearch%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 03 Mar 2022 18:03:03 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/opensearch%E4%BD%BF%E7%94%A8/</guid>
      <description>Opensearch是什麽 OpenSearch 是一个软件系列，由搜索引擎（也称为 OpenSearch）和 OpenSearch Dashboards（该搜索引擎的数据可视化仪表板）</description>
    </item>
    
    <item>
      <title>Docker機器學習環境搭建</title>
      <link>https://me.w0x7ce.eu/post/docker%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92%E7%92%B0%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Thu, 03 Mar 2022 17:21:04 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/docker%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92%E7%92%B0%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>Way 1 simple use ufoym/deepo https://github.com/ufoym/deepo https://hub.docker.com/r/ufoym/deepo Configure Docker Step 1 Uninstall old version sudo apt-get remove docker docker-engine docker.io containerd runc Step 2 Install latest docker sudo apt-get update sudo apt-get install \ ca-certificates \ curl \ gnupg \ lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \ &amp;quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \ $(lsb_release -cs) stable&amp;quot; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null sudo apt-get update</description>
    </item>
    
    <item>
      <title>Setting up Chrome and Selenium without GUI</title>
      <link>https://me.w0x7ce.eu/post/setting-up-chrome-and-selenium-without-gui/</link>
      <pubDate>Sun, 13 Feb 2022 20:08:40 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/setting-up-chrome-and-selenium-without-gui/</guid>
      <description>SSH into your VPS sudo apt update sudo apt upgrade sudo apt install wget -y Download &amp;amp;Install Chrome wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo dpkg -i google-chrome-stable_current_amd64.deb sudo apt-get install -f Test your intall google-chrome View the version google-chrome --version Download the chrome-driver Find the package here https://chromedriver.chromium.org/downloads wget {link you copied above} unzip xxx.zip sudo mv chromedriver /usr/bin/chromedriver sudo chown root:root /usr/bin/chromedriver sudo chmod +x /usr/bin/chromedriver Verify chromedriver is working chromedriver --url-base=/wd/hub</description>
    </item>
    
    <item>
      <title>Nvidia驱动安装相关问题</title>
      <link>https://me.w0x7ce.eu/post/nvidia%E9%A9%B1%E5%8A%A8%E5%AE%89%E8%A3%85%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 03 Feb 2022 21:08:48 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/nvidia%E9%A9%B1%E5%8A%A8%E5%AE%89%E8%A3%85%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</guid>
      <description>Failed to initialize NVML: Driver/library version mismatch. 驱动与驱动内核版本不匹配 方式1: 直接重启 方式2：手动重新加载内核模块（先移除旧模块，再加载新模块） 查看依赖（可略） 查看依赖 lsmod |</description>
    </item>
    
    <item>
      <title>Solidity開發02</title>
      <link>https://me.w0x7ce.eu/post/solidity%E9%96%8B%E7%99%BC02/</link>
      <pubDate>Sat, 25 Dec 2021 14:06:01 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/solidity%E9%96%8B%E7%99%BC02/</guid>
      <description>pragma solidity ^0.4.25; contract Meow_test{ int cc; string namename; string name; address owner; uint public rename_counter; bool isVaild; uint balance; string information; event LogCreate(string information,uint balance); event LogCreateINdex(string indexed information,uint indexed balance); event LogCreate_name_balance(string name,uint balance); event LogCreate_b(uint b); constructor() public { name=&amp;quot;unknown&amp;quot;; owner=msg.sender; rename_counter=0; isVaild = true; information = &amp;quot;default&amp;quot;; balance = 100; emit LogCreate(information,balance); emit LogCreateINdex(information,balance); } function fb() public payable{ //emit LogCreate_name_balance(name,balance); emit LogCreate_b(address(this).balance); } //fallback function</description>
    </item>
    
    <item>
      <title>Git使用</title>
      <link>https://me.w0x7ce.eu/post/git%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 15 Dec 2021 15:32:38 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/git%E4%BD%BF%E7%94%A8/</guid>
      <description>git init - 初始化仓库。 git add . - 添加文件到暂存区。 git commit - 将暂存区内容添加到仓库中。 创建仓库命令 下表列出了 git 创建仓库的命令： 命令 说明 git init 初始化仓库 git</description>
    </item>
    
    <item>
      <title>控制系統仿真</title>
      <link>https://me.w0x7ce.eu/post/%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%B5%B1%E4%BB%BF%E7%9C%9F/</link>
      <pubDate>Mon, 22 Nov 2021 17:18:19 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%B5%B1%E4%BB%BF%E7%9C%9F/</guid>
      <description>3 3-1 X = [4 15 7 3 1]; pie(X) X = [4 15 7 3 1]; labels = {&#39;100-90&#39;,&#39;89-80&#39;,&#39;79-70&#39;,&#39;69-60&#39;,&#39;59-0&#39;}; pie(X,labels) pie3(X,labels) X = reordercats(X,{&#39;100-90&#39;,&#39;89-80&#39;,&#39;79-70&#39;,&#39;69-60&#39;,&#39;59-0&#39;}); Y=[4 15 7 3 1]; bar(X,Y) bar3(X,Y) 3-2 plot(x1,y1) x1 = linspace(0,2*3.1415926,125); y1=cos(x1.*(0.5+3.*sin(x1)/(1+x1.*x1))) 3-3 z = linspace(-45,45,500); x = z.*sin(3.*z) y = z.*cos(3.*z) 3-4 t = linspace(-200,200,5000); y1=sin(2.*t+0); y2=sin(2.*t+3.1415926/3); y3=sin(2.*t+3.1415926/2); y4=sin(2.*t+3.1415926); subplot(2,2,1) plot(x,y1) subplot(2,2,2) plot(x,y2) subplot(2,2,3) plot(x,y3) subplot(2,2,4) plot(x,y4)</description>
    </item>
    
    <item>
      <title>防火墙的使用</title>
      <link>https://me.w0x7ce.eu/post/%E9%98%B2%E7%81%AB%E5%A2%99%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 22 Nov 2021 09:04:05 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/%E9%98%B2%E7%81%AB%E5%A2%99%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>单端口 端口转发 同端口 端口转发 iptables -t nat -A PREROUTING -p tcp --dport [本地端口] -j DNAT --to-destination [目标IP:目标端口] iptables -t nat -A PREROUTING -p udp --dport [本地端口] -j DNAT --to-destination [目标IP:目标端口]</description>
    </item>
    
    <item>
      <title>Solidity開發01</title>
      <link>https://me.w0x7ce.eu/post/solidity%E9%96%8B%E7%99%BC01/</link>
      <pubDate>Sun, 21 Nov 2021 12:28:22 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/solidity%E9%96%8B%E7%99%BC01/</guid>
      <description>pragma solidity ^0.4.20; // 定义ERC-20标准接口 contract ERC20Interface { // 代币名称 string public name; // 代币符号或者说简写 string public symbol; // 代币小数点位数，代币的最小单位 uint8 public decimals; // 代币的发行总量 uint public totalSupply;</description>
    </item>
    
    <item>
      <title>Open mmlab mmtracking</title>
      <link>https://me.w0x7ce.eu/post/open-mmlab-mmtracking/</link>
      <pubDate>Thu, 30 Sep 2021 20:12:44 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/open-mmlab-mmtracking/</guid>
      <description>环境 (mmcv) w0x7ce@w0x7ce-XPS-15-9570:~/Desktop/mmtracking$ nvidia-smi Fri Oct 1 10:29:58 2021 +-----------------------------------------------------------------------------+ | NVIDIA-SMI 450.142.00 Driver Version: 450.142.00 CUDA Version: 11.0 | |-------------------------------+----------------------+----------------------+ | GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC | | Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. | | | | MIG M. | |===============================+======================+======================| | 0 GeForce GTX 105... Off | 00000000:01:00.0 Off | N/A | | N/A 36C P8 N/A / N/A</description>
    </item>
    
    <item>
      <title>Openpose调试</title>
      <link>https://me.w0x7ce.eu/post/openpose%E8%B0%83%E8%AF%95/</link>
      <pubDate>Tue, 28 Sep 2021 11:25:26 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/openpose%E8%B0%83%E8%AF%95/</guid>
      <description>bin\OpenPoseDemo.exe &amp;ndash;model_pose COCO &amp;ndash;net_resolution 320x176 bin\OpenPoseDemo.exe &amp;ndash;video examples/media/video.avi &amp;ndash;num_gpu 1 &amp;ndash;num_gpu_start 0 &amp;ndash;net_resolution 480x320 bin\OpenPoseDemo.exe &amp;ndash;video examples/media/video.avi &amp;ndash;write_video output/result.avi</description>
    </item>
    
    <item>
      <title>MATLAB机器人仿真(一)</title>
      <link>https://me.w0x7ce.eu/post/matlab%E6%9C%BA%E5%99%A8%E4%BA%BA%E4%BB%BF%E7%9C%9F%E4%B8%80/</link>
      <pubDate>Fri, 24 Sep 2021 19:54:29 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/matlab%E6%9C%BA%E5%99%A8%E4%BA%BA%E4%BB%BF%E7%9C%9F%E4%B8%80/</guid>
      <description>二维空间姿态描述 &amp;gt;&amp;gt; T1 = SE2(1,2,30*pi/180) T1 = 0.8660 -0.5000 1 0.5000 0.8660 2 0 0 1 &amp;gt;&amp;gt; axis([0 5 0 5]) &amp;gt;&amp;gt; trplot2(T1,&#39;frame&#39;,&#39;1&#39;,&#39;color&#39;,&#39;b&#39;) &amp;gt;&amp;gt; T2 = SE2(2,1,0) T2 = 1 0 2 0 1 1 0 0 1 &amp;gt;&amp;gt; hold on &amp;gt;&amp;gt; trplot2(T2,&#39;frame&#39;,&#39;2&#39;,&#39;color&#39;,&#39;r&#39;) &amp;gt;&amp;gt; T3 = T1 * T2 T3 = 0.8660 -0.5000 2.232 0.5000 0.8660 3.866 0 0 1 &amp;gt;&amp;gt; trplot2(T3,&#39;frame&#39;,&#39;3&#39;,&#39;color&#39;,&#39;g&#39;) &amp;gt;&amp;gt;</description>
    </item>
    
    <item>
      <title>TinyBenchmark复现记录</title>
      <link>https://me.w0x7ce.eu/post/tinybenchmark%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Tue, 21 Sep 2021 08:04:54 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/tinybenchmark%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95/</guid>
      <description>undefined symbol: _ZN2at18SparseCUDATensorIdEv ImportError: /data/repos/maskrcnn-benchmark/maskrcnn_benchmark/_C.cpython-37m-x86_64-linux-gnu.so: undefined symbol: _ZN2at18SparseCUDATensorIdEv 参考链接 错误内容 (maskrcnn_benchmark) user_name@server_name: /data/repos/maskrcnn-benchmark$ python tools/train_net.py Traceback (most recent call last): File &amp;quot;train_net.py&amp;quot;, line 18, in from maskrcnn_benchmark.engine.inference import inference File &amp;quot;/data/repos/maskrcnn-benchmark/maskrcnn_benchmark/engine/inference.py&amp;quot;, line 10, in from maskrcnn_benchmark.data.datasets.evaluation import evaluate File &amp;quot;/data/repos/maskrcnn-benchmark/maskrcnn_benchmark/data/datasets/evaluation/init.py&amp;quot;, line 3, in from .coco import coco_evaluation File &amp;quot;/data/repos/maskrcnn-benchmark/maskrcnn_benchmark/data/datasets/evaluation/coco/init.py&amp;quot;, line 1, in from .coco_eval import do_coco_evaluation File &amp;quot;/data/repos/maskrcnn-benchmark/maskrcnn_benchmark/data/datasets/evaluation/coco/coco_eval.py&amp;quot;, line 10, in from maskrcnn_benchmark.structures.boxlist_ops import</description>
    </item>
    
    <item>
      <title>conda安装与使用</title>
      <link>https://me.w0x7ce.eu/post/conda%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 20 Sep 2021 17:53:38 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/conda%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
      <description>Prerequisites To use GUI packages with Linux, you will need to install the following extended dependencies for Qt: Debian apt-get install libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6 RedHat yum install libXcomposite libXcursor libXi libXtst libXrandr alsa-lib mesa-libEGL libXdamage mesa-libGL libXScrnSaver ArchLinux pacman -Sy libxau libxi libxss libxtst libxcursor libxcomposite libxdamage libxfixes libxrandr libxrender mesa-libgl alsa-lib libglvnd OpenSuse/SLES zypper install libXcomposite1 libXi6 libXext6 libXau6 libX11-6 libXrandr2 libXrender1</description>
    </item>
    
    <item>
      <title>Google Colab使用技巧</title>
      <link>https://me.w0x7ce.eu/post/google-colab%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sat, 18 Sep 2021 22:58:24 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/google-colab%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
      <description>在 Google colab上使用 conda Step 1 首先，需要确认在 Google Colab 中默认使用的是哪个 Python。 运行以下命令返回默认 Python 可执行文件的绝对路径。 !which python # should return /usr/local/bin/python 现在检</description>
    </item>
    
    <item>
      <title>Docker使用方法(二)</title>
      <link>https://me.w0x7ce.eu/post/docker%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E4%BA%8C/</link>
      <pubDate>Tue, 14 Sep 2021 21:51:28 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/docker%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E4%BA%8C/</guid>
      <description>Docker 客戶端 docker 客戶端非常簡單 ,我們可以直接輸入 docker 命令來查看到 Docker 客戶端的所有命令選項。 w0x7ce@w0x7ce:~# docker 可以通過命令 docker command &amp;ndash;help 更深入的了解指定的 Docker 命令使用方法。 例如</description>
    </item>
    
    <item>
      <title>Docker使用方法(一)</title>
      <link>https://me.w0x7ce.eu/post/docker%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E4%B8%80/</link>
      <pubDate>Tue, 14 Sep 2021 20:32:49 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/docker%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E4%B8%80/</guid>
      <description>Docker的應用場景 Web 應用的自動化打包和發布。 自動化測試和持續集成、發布。 在服務型環境中部署和調整數據庫或其他的後台應用。 從頭編譯或者擴展</description>
    </item>
    
    <item>
      <title>常用Linux命令(二)--sed</title>
      <link>https://me.w0x7ce.eu/post/%E5%B8%B8%E7%94%A8linux%E5%91%BD%E4%BB%A4%E4%BA%8C/</link>
      <pubDate>Mon, 13 Sep 2021 21:25:58 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/%E5%B8%B8%E7%94%A8linux%E5%91%BD%E4%BB%A4%E4%BA%8C/</guid>
      <description>在每一行後面增加一空行 sed G 將原來的所有空行刪除並在每一行後面增加一空行。 這樣在輸出的文本中每一行後面將有且只有一空行。 sed &#39;/^$/d;G&#39; 在每一行後面增加兩</description>
    </item>
    
    <item>
      <title>ROS学习(二)</title>
      <link>https://me.w0x7ce.eu/post/ros%E5%AD%A6%E4%B9%A0%E4%BA%8C/</link>
      <pubDate>Mon, 13 Sep 2021 20:15:37 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/ros%E5%AD%A6%E4%B9%A0%E4%BA%8C/</guid>
      <description>创建ROS软件包 Description: 本教程介绍如何使用roscreate-pkg或catkin创建新的ROS软件包，并使用rospack列出软件包的依赖关系。</description>
    </item>
    
    <item>
      <title>ROS学习(一)</title>
      <link>https://me.w0x7ce.eu/post/ros%E5%AD%A6%E4%B9%A0%E4%B8%80/</link>
      <pubDate>Mon, 13 Sep 2021 20:08:40 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/ros%E5%AD%A6%E4%B9%A0%E4%B8%80/</guid>
      <description>ROS文件系统导览 Description: 本教程介绍ROS文件系统的概念，包括如何使用roscd、rosls和rospack命令行工具。 Tutorial Level: BEGINNER Next Tutorial: 创建ROS软件包</description>
    </item>
    
    <item>
      <title>Linux命令大全</title>
      <link>https://me.w0x7ce.eu/post/linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</link>
      <pubDate>Mon, 13 Sep 2021 13:52:02 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</guid>
      <description>Linux 命令大全 1、文件管理 cat chattr chgrp chmod chown cksum cmp diff diffstat file find git gitview indent cut ln less locate lsattr mattrib mc mdel mdir mktemp more mmove mread mren mtools mtoolstest mv od paste patch rcp rm slocate split tee tmpwatch touch umask which cp whereis mcopy mshowfat rhmask scp awk read updatedb 2、文档编辑 col</description>
    </item>
    
    <item>
      <title>Shell脚本编程(七)</title>
      <link>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E4%B8%83/</link>
      <pubDate>Sun, 12 Sep 2021 21:00:04 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E4%B8%83/</guid>
      <description>Shell 输入/输出重定向 大多数 UNIX 系统命令从你的终端接受输入并将所产生的输出发送回​​到您的终端。一个命令通常从一个叫标准输入的地方读取输入，默认情</description>
    </item>
    
    <item>
      <title>Shell脚本编程(六)</title>
      <link>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E5%85%AD/</link>
      <pubDate>Sun, 12 Sep 2021 20:44:56 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E5%85%AD/</guid>
      <description>Shell 函数 linux shell 可以用户定义函数，然后在shell脚本中可以随便调用。 shell中函数的定义格式如下： [ function ] funname [()] { action; [return int;] } 说明： 1、可以带func</description>
    </item>
    
    <item>
      <title>Shell脚本编程(五)</title>
      <link>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E4%BA%94/</link>
      <pubDate>Sun, 12 Sep 2021 20:23:01 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E4%BA%94/</guid>
      <description>Shell 流程控制 和 Java、PHP 等语言不一样，sh 的流程控制不可为空，如(以下为 PHP 流程控制写法)： &amp;lt;?php if (isset($_GET[&amp;quot;q&amp;quot;])) { search(q); } else { // 不做任何事情 } 在 sh/bash 里可不能这</description>
    </item>
    
    <item>
      <title>Shell脚本编程(四)</title>
      <link>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E5%9B%9B/</link>
      <pubDate>Sun, 12 Sep 2021 20:11:16 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E5%9B%9B/</guid>
      <description>Shell printf 命令 上一章节我们学习了 Shell 的 echo 命令，本章节我们来学习 Shell 的另一个输出命令 printf。 printf 命令模仿 C 程序库（library）里的 printf() 程序。 printf 由 POSIX</description>
    </item>
    
    <item>
      <title>Shell脚本编程(三)</title>
      <link>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E4%B8%89/</link>
      <pubDate>Sun, 12 Sep 2021 19:01:25 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E4%B8%89/</guid>
      <description>Shell 基本运算符 Shell 和其他编程语言一样，支持多种运算符，包括： 算数运算符 关系运算符 布尔运算符 字符串运算符 文件测试运算符 原生bash不支持简单的数学</description>
    </item>
    
    <item>
      <title>Shell脚本编程(二)</title>
      <link>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E4%BA%8C/</link>
      <pubDate>Sun, 12 Sep 2021 18:45:47 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E4%BA%8C/</guid>
      <description>Shell 传递参数 我们可以在执行 Shell 脚本时，向脚本传递参数，脚本内获取参数的格式为：$n。n 代表一个数字，1 为执行脚本的第一个参数，2 为执行脚本的第二</description>
    </item>
    
    <item>
      <title>Shell脚本编程(一)</title>
      <link>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E4%B8%80/</link>
      <pubDate>Sun, 12 Sep 2021 18:21:09 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/shell%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E4%B8%80/</guid>
      <description>Shell变量 注意，变量名和等号之间不能有空格，这可能和你熟悉的所有编程语言都不一样。同时，变量名的命名须遵循如下规则： 命名只能使用英文字母</description>
    </item>
    
    <item>
      <title>常用Linux命令(一)</title>
      <link>https://me.w0x7ce.eu/post/%E5%B8%B8%E7%94%A8linux%E5%91%BD%E4%BB%A4%E4%B8%80/</link>
      <pubDate>Sun, 12 Sep 2021 15:33:23 +0800</pubDate>
      
      <guid>https://me.w0x7ce.eu/post/%E5%B8%B8%E7%94%A8linux%E5%91%BD%E4%BB%A4%E4%B8%80/</guid>
      <description>Shell echo命令 1.显示普通字符串: echo &amp;ldquo;It is a test&amp;rdquo; 这里的双引号完全可以省略，以下命令与上面实例效果一致： echo It is a test 2.显示转义字符 echo &amp;ldquo;&amp;quot;It is a test&amp;quot;&amp;rdquo; 结果将</description>
    </item>
    
  </channel>
</rss>
